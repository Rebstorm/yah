{"ast":null,"code":"import { __rest } from 'tslib';\nimport { isPlatformServer, CommonModule } from '@angular/common';\nimport { EventEmitter, Injector, Component, ChangeDetectionStrategy, Input, Output, ViewChild, ChangeDetectorRef, ViewChildren, ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { isTemplateRef, isComponent, ViewService, DynamicContentModule } from '@ngneat/overview';\nimport { filter, tap } from 'rxjs/operators';\nimport { Subject, race } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@ngneat/overview';\nconst _c0 = [\"hotToastBarBase\"];\n\nfunction HotToastComponent_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"hot-toast-animated-icon\", 10);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"iconTheme\", ctx_r5.toast.iconTheme);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.toast.icon);\n  }\n}\n\nfunction HotToastComponent_ng_container_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"dynamic-content\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r7.toast.icon);\n  }\n}\n\nfunction HotToastComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, HotToastComponent_ng_container_4_ng_container_1_Template, 3, 2, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, HotToastComponent_ng_container_4_ng_template_2_Template, 1, 1, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = ɵngcc0.ɵɵreference(3);\n\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isIconString)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction HotToastComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"hot-toast-indicator\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"theme\", ctx_r3.toast.iconTheme)(\"type\", ctx_r3.toast.type);\n  }\n}\n\nfunction HotToastComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function HotToastComponent_button_9_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.close();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r4.toast.closeStyle);\n  }\n}\n\nfunction HotToastContainerComponent_hot_toast_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"hot-toast\", 3);\n    ɵngcc0.ɵɵlistener(\"height\", function HotToastContainerComponent_hot_toast_2_Template_hot_toast_height_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4);\n      const toast_r1 = restoredCtx.$implicit;\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.updateHeight($event, toast_r1);\n    })(\"beforeClosed\", function HotToastContainerComponent_hot_toast_2_Template_hot_toast_beforeClosed_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4);\n      const toast_r1 = restoredCtx.$implicit;\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.beforeClosed(toast_r1);\n    })(\"afterClosed\", function HotToastContainerComponent_hot_toast_2_Template_hot_toast_afterClosed_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.afterClosed($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const toast_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"toast\", toast_r1)(\"offset\", ctx_r0.calculateOffset(toast_r1.id, toast_r1.position))(\"toastRef\", ctx_r0.toastRefs[i_r2]);\n  }\n}\n\nconst _c1 = [\"*\"];\n\nconst _c2 = function (a0, a1) {\n  return {\n    \"border-color\": a0,\n    \"border-right-color\": a1\n  };\n};\n\nfunction IndicatorComponent_ng_container_0_ng_container_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"hot-toast-error\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"theme\", ctx_r2.theme);\n  }\n}\n\nfunction IndicatorComponent_ng_container_0_ng_container_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"hot-toast-checkmark\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"theme\", ctx_r3.theme);\n  }\n}\n\nfunction IndicatorComponent_ng_container_0_ng_container_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"hot-toast-warning\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"theme\", ctx_r4.theme);\n  }\n}\n\nfunction IndicatorComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(3, IndicatorComponent_ng_container_0_ng_container_3_div_3_Template, 2, 1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(4, IndicatorComponent_ng_container_0_ng_container_3_div_4_Template, 2, 1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(5, IndicatorComponent_ng_container_0_ng_container_3_div_5_Template, 2, 1, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.type);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n  }\n}\n\nfunction IndicatorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵelement(2, \"hot-toast-loader\", 2);\n    ɵngcc0.ɵɵtemplate(3, IndicatorComponent_ng_container_0_ng_container_3_Template, 6, 4, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"theme\", ctx_r0.theme);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.type !== \"loading\");\n  }\n}\n\nconst HOT_TOAST_DEFAULT_TIMEOUTS = {\n  blank: 4000,\n  error: 4000,\n  success: 4000,\n  loading: 30000,\n  warning: 4000\n};\nconst EXIT_ANIMATION_DURATION = 800;\nconst ENTER_ANIMATION_DURATION = 350;\nconst HOT_TOAST_MARGIN = 8;\n\nclass HotToastRef {\n  constructor(toast) {\n    this.toast = toast;\n    /** Subject for notifying the user that the toast has been closed. */\n\n    this._onClosed = new Subject();\n  }\n\n  set dispose(value) {\n    this._dispose = value;\n  }\n\n  getToast() {\n    return this.toast;\n  }\n  /**Used for internal purpose\n   * Attach ToastRef to container\n   */\n\n\n  appendTo(container) {\n    const {\n      dispose,\n      updateMessage,\n      updateToast,\n      afterClosed\n    } = container.addToast(this);\n    this.dispose = dispose;\n    this.updateMessage = updateMessage;\n    this.updateToast = updateToast;\n    this.afterClosed = race(this._onClosed.asObservable(), afterClosed);\n    return this;\n  }\n  /**\n   * Closes the toast\n   *\n   * @param [closeData={ dismissedByAction: false }] -\n   * Make sure to pass { dismissedByAction: true } when closing from template\n   * @memberof HotToastRef\n   */\n\n\n  close(closeData = {\n    dismissedByAction: false\n  }) {\n    this._dispose();\n\n    this._onClosed.next({\n      dismissedByAction: closeData.dismissedByAction,\n      id: this.toast.id\n    });\n\n    this._onClosed.complete();\n  }\n\n  get data() {\n    return this.toast.data;\n  }\n\n}\n\nconst animate = (element, value) => {\n  element.style.animation = value;\n};\n\nlet HotToastComponent = /*#__PURE__*/(() => {\n  class HotToastComponent {\n    constructor(injector) {\n      this.injector = injector;\n      this.offset = 0;\n      this.height = new EventEmitter();\n      this.beforeClosed = new EventEmitter();\n      this.afterClosed = new EventEmitter();\n      this.isManualClose = false;\n    }\n\n    ngOnInit() {\n      if (isTemplateRef(this.toast.message)) {\n        this.context = {\n          $implicit: this.toastRef\n        };\n      }\n\n      if (isComponent(this.toast.message)) {\n        this.toastComponentInjector = Injector.create({\n          providers: [{\n            provide: HotToastRef,\n            useValue: this.toastRef\n          }],\n          parent: this.toast.injector || this.injector\n        });\n      }\n    }\n\n    ngAfterViewInit() {\n      const nativeElement = this.toastBarBase.nativeElement;\n      this.height.emit(nativeElement.offsetHeight);\n      nativeElement.addEventListener('animationstart', ev => {\n        if (this.isExitAnimation(ev)) {\n          this.beforeClosed.emit();\n        }\n      });\n      nativeElement.addEventListener('animationend', ev => {\n        if (this.isExitAnimation(ev)) {\n          this.afterClosed.emit({\n            dismissedByAction: this.isManualClose,\n            id: this.toast.id\n          });\n        }\n      });\n    }\n\n    get containerPositionStyle() {\n      const top = this.toast.position.includes('top');\n      const verticalStyle = top ? {\n        top: 0\n      } : {\n        bottom: 0\n      };\n      const horizontalStyle = this.toast.position.includes('left') ? {\n        left: 0\n      } : this.toast.position.includes('right') ? {\n        right: 0\n      } : {\n        left: 0,\n        right: 0,\n        justifyContent: 'center'\n      };\n      return Object.assign(Object.assign({\n        transform: `translateY(${this.offset * (top ? 1 : -1)}px)`\n      }, verticalStyle), horizontalStyle);\n    }\n\n    get toastBarBaseStyles() {\n      const top = this.toast.position.includes('top');\n      const enterAnimation = `hotToastEnterAnimation${top ? 'Negative' : 'Positive'} ${ENTER_ANIMATION_DURATION}ms cubic-bezier(0.21, 1.02, 0.73, 1) forwards`;\n      const exitAnimation = `hotToastExitAnimation${top ? 'Negative' : 'Positive'} ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1) ${this.toast.duration}ms`;\n      const animation = this.toast.autoClose ? `${enterAnimation}, ${exitAnimation}` : enterAnimation;\n      return Object.assign(Object.assign({}, this.toast.style), {\n        animation\n      });\n    }\n\n    get isIconString() {\n      return typeof this.toast.icon === 'string';\n    }\n\n    close() {\n      this.isManualClose = true;\n      const top = this.toast.position.includes('top');\n      const exitAnimation = `hotToastExitAnimation${top ? 'Negative' : 'Positive'} ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1)`;\n      const nativeElement = this.toastBarBase.nativeElement;\n      animate(nativeElement, exitAnimation);\n    }\n\n    ngOnDestroy() {\n      this.close();\n    }\n\n    isExitAnimation(ev) {\n      return ev.animationName.includes('hotToastExitAnimation');\n    }\n\n  }\n\n  HotToastComponent.ɵfac = function HotToastComponent_Factory(t) {\n    return new (t || HotToastComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector));\n  };\n\n  HotToastComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HotToastComponent,\n    selectors: [[\"hot-toast\"]],\n    viewQuery: function HotToastComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toastBarBase = _t.first);\n      }\n    },\n    inputs: {\n      offset: \"offset\",\n      toast: \"toast\",\n      defaultConfig: \"defaultConfig\",\n      toastRef: \"toastRef\"\n    },\n    outputs: {\n      height: \"height\",\n      beforeClosed: \"beforeClosed\",\n      afterClosed: \"afterClosed\"\n    },\n    decls: 10,\n    vars: 14,\n    consts: [[1, \"hot-toast-bar-base-container\", 3, \"ngStyle\", \"ngClass\"], [1, \"hot-toast-bar-base\", 3, \"ngStyle\", \"ngClass\"], [\"hotToastBarBase\", \"\"], [\"aria-hidden\", \"true\", 1, \"hot-toast-icon\"], [4, \"ngIf\", \"ngIfElse\"], [\"indicator\", \"\"], [1, \"hot-toast-message\"], [3, \"content\", \"context\", \"injector\"], [\"type\", \"button\", \"class\", \"hot-toast-close-btn\", \"aria-label\", \"Close\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [\"iconTemplateOrComponent\", \"\"], [3, \"iconTheme\"], [3, \"content\"], [3, \"theme\", \"type\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"hot-toast-close-btn\", 3, \"ngStyle\", \"click\"]],\n    template: function HotToastComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, HotToastComponent_ng_container_4_Template, 4, 2, \"ng-container\", 4);\n        ɵngcc0.ɵɵtemplate(5, HotToastComponent_ng_template_5_Template, 1, 2, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 6);\n        ɵngcc0.ɵɵelement(8, \"dynamic-content\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, HotToastComponent_button_9_Template, 1, 1, \"button\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = ɵngcc0.ɵɵreference(6);\n\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.containerPositionStyle)(\"ngClass\", \"hot-toast-theme-\" + ctx.toast.theme);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"--hot-toast-animation-state\", ctx.isManualClose ? \"running\" : \"paused\");\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.toastBarBaseStyles)(\"ngClass\", ctx.toast.className);\n        ɵngcc0.ɵɵattribute(\"aria-live\", ctx.toast.ariaLive)(\"role\", ctx.toast.role);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.toast.icon !== undefined)(\"ngIfElse\", _r2);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"content\", ctx.toast.message)(\"context\", ctx.context)(\"injector\", ctx.toastComponentInjector);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.toast.dismissible);\n      }\n    },\n    directives: function () {\n      return [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc2.ɵa, AnimatedIconComponent, IndicatorComponent];\n    },\n    styles: [\".hot-toast-bar-base[_ngcontent-%COMP%]{align-items:center;background:var(--hot-toast-bg,#fff);border-radius:var(--hot-toast-border-radius,4px);box-shadow:var(--hot-toast-shadow,0 3px 10px rgba(0,0,0,.1),0 3px 3px rgba(0,0,0,.05));color:var(--hot-toast-color,#363636);display:flex;line-height:var(--hot-toast-line,1.3);margin:16px;max-width:var(--hot-toast-max-width,350px);padding:8px 10px;pointer-events:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;will-change:transform}.hot-toast-bar-base[_ngcontent-%COMP%]:focus, .hot-toast-bar-base[_ngcontent-%COMP%]:hover{animation-play-state:var(--hot-toast-animation-state,paused)!important}@media (prefers-reduced-motion:reduce){.hot-toast-bar-base[_ngcontent-%COMP%]{animation-duration:10ms!important}}.hot-toast-message[_ngcontent-%COMP%]{color:inherit;display:flex;flex:1;justify-content:center;margin:4px 10px}.hot-toast-bar-base-container[_ngcontent-%COMP%]{display:flex;pointer-events:none;position:absolute;transition:transform .23s cubic-bezier(.21,1.02,.73,1)}@media (prefers-reduced-motion:reduce){.hot-toast-bar-base-container[_ngcontent-%COMP%]{transition-duration:10ms!important}}.hot-toast-bar-base-container.hot-toast-theme-snackbar[_ngcontent-%COMP%]   .hot-toast-bar-base[_ngcontent-%COMP%]{background:var(--hot-toast-snackbar-bg,#323232);box-shadow:var(--hot-toast-snackbar-shadow,0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12));color:var(--hot-toast-snackbar-color,#fff)}.hot-toast-bar-base-container.hot-toast-theme-snackbar[_ngcontent-%COMP%]   .hot-toast-close-btn[_ngcontent-%COMP%]{filter:invert(1) grayscale(100%) brightness(200%)}@keyframes hotToastEnterAnimationNegative{0%{opacity:.5;transform:translate3d(0,-80px,0) scale(.6)}to{opacity:1;transform:translateZ(0) scale(1)}}@keyframes hotToastEnterAnimationPositive{0%{opacity:.5;transform:translate3d(0,80px,0) scale(.6)}to{opacity:1;transform:translateZ(0) scale(1)}}@keyframes hotToastExitAnimationPositive{0%{opacity:1;transform:translateZ(-1px) scale(1)}to{opacity:0;transform:translate3d(0,130px,-1px) scale(.5)}}@keyframes hotToastExitAnimationNegative{0%{opacity:1;transform:translateZ(-1px) scale(1)}to{opacity:0;transform:translate3d(0,-130px,-1px) scale(.5)}}.hot-toast-close-btn[_ngcontent-%COMP%]{align-self:flex-start;background-color:initial;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e\\\");background-position:50%;background-repeat:no-repeat;background-size:.75em;border:0;border-radius:.25rem;box-sizing:initial;display:flex;height:.8em;margin-top:.25em;opacity:.5;padding:.25em;width:.8em}.hot-toast-close-btn[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 .125rem rgba(13,110,253,.25);outline:none}.hot-toast-close-btn[_ngcontent-%COMP%]:focus, .hot-toast-close-btn[_ngcontent-%COMP%]:hover{opacity:.75}.hot-toast-icon[_ngcontent-%COMP%]{align-self:flex-start;padding-top:.25em}\"],\n    changeDetection: 0\n  });\n  return HotToastComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet HotToastContainerComponent = /*#__PURE__*/(() => {\n  class HotToastContainerComponent {\n    constructor(cdr) {\n      this.cdr = cdr;\n      this.toasts = [];\n      this.toastRefs = [];\n      /** Subject for notifying the user that the toast has been closed. */\n\n      this._onClosed = new Subject();\n      this.onClosed$ = this._onClosed.asObservable();\n    }\n\n    trackById(index, toast) {\n      return toast.id;\n    }\n\n    calculateOffset(toastId, position) {\n      const visibleToasts = this.toasts.filter(t => t.visible && t.position === position);\n      const index = visibleToasts.findIndex(toast => toast.id === toastId);\n      const offset = index !== -1 ? visibleToasts.slice(...(this.defaultConfig.reverseOrder ? [index + 1] : [0, index])).reduce((acc, t) => acc + (t.height || 0) + HOT_TOAST_MARGIN, 0) : 0;\n      return offset;\n    }\n\n    updateHeight(height, toast) {\n      toast.height = height;\n      this.cdr.detectChanges();\n    }\n\n    addToast(ref) {\n      this.toastRefs.push(ref);\n      const toast = ref.getToast();\n      this.toasts.push(ref.getToast());\n      this.cdr.detectChanges();\n      return {\n        dispose: () => {\n          this.closeToast(toast.id);\n        },\n        updateMessage: message => {\n          toast.message = message;\n          this.cdr.detectChanges();\n        },\n        updateToast: options => {\n          this.updateToasts(toast, options);\n          this.cdr.detectChanges();\n        },\n        afterClosed: this.getAfterClosed(toast)\n      };\n    }\n\n    closeToast(id) {\n      const comp = this.hotToastComponentList.find(item => item.toast.id === id);\n\n      if (comp) {\n        comp.close();\n      }\n    }\n\n    beforeClosed(toast) {\n      toast.visible = false;\n    }\n\n    afterClosed(closeToast) {\n      const toastIndex = this.toasts.findIndex(t => t.id === closeToast.id);\n\n      if (toastIndex > -1) {\n        this._onClosed.next(closeToast);\n\n        this.toasts = this.toasts.filter(t => t.id !== closeToast.id);\n        this.toastRefs = this.toastRefs.filter(t => t.getToast().id !== closeToast.id);\n        this.cdr.detectChanges();\n      }\n    }\n\n    hasToast(id) {\n      return this.toasts.findIndex(t => t.id === id) > -1;\n    }\n\n    getAfterClosed(toast) {\n      return this.onClosed$.pipe(filter(v => v.id === toast.id));\n    }\n\n    updateToasts(toast, options) {\n      this.toasts = this.toasts.map(t => Object.assign(Object.assign({}, t), t.id === toast.id && Object.assign(Object.assign({}, toast), options)));\n    }\n\n  }\n\n  HotToastContainerComponent.ɵfac = function HotToastContainerComponent_Factory(t) {\n    return new (t || HotToastContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  HotToastContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HotToastContainerComponent,\n    selectors: [[\"hot-toast-container\"]],\n    viewQuery: function HotToastContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(HotToastComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.hotToastComponentList = _t);\n      }\n    },\n    inputs: {\n      defaultConfig: \"defaultConfig\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[2, \"position\", \"fixed\", \"z-index\", \"9999\", \"top\", \"0\", \"right\", \"0\", \"bottom\", \"0\", \"left\", \"0\", \"pointer-events\", \"none\"], [2, \"position\", \"relative\", \"height\", \"100%\"], [3, \"toast\", \"offset\", \"toastRef\", \"height\", \"beforeClosed\", \"afterClosed\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"toast\", \"offset\", \"toastRef\", \"height\", \"beforeClosed\", \"afterClosed\"]],\n    template: function HotToastContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, HotToastContainerComponent_hot_toast_2_Template, 1, 3, \"hot-toast\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.toasts)(\"ngForTrackBy\", ctx.trackById);\n      }\n    },\n    directives: [ɵngcc1.NgForOf, HotToastComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return HotToastContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass ToastConfig {\n  constructor() {\n    /**\n     * Sets the reverse order for hot-toast stacking\n     *\n     * @default false\n     */\n    this.reverseOrder = false;\n    this.ariaLive = 'polite';\n    this.role = 'status';\n    this.position = 'top-center';\n    this.autoClose = true;\n    this.theme = 'toast'; // key in ToastType\n\n    this.success = {\n      content: ''\n    };\n    this.error = {\n      content: ''\n    };\n    this.loading = {\n      content: ''\n    };\n    this.blank = {\n      content: ''\n    };\n    this.warning = {\n      content: ''\n    };\n  }\n\n}\n\nconst isFunction = valOrFunction => typeof valOrFunction === 'function';\n\nconst ɵ0 = isFunction;\n\nconst resolveValueOrFunction = (valOrFunction, arg) => isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;\n\nclass ToastPersistConfig {\n  constructor() {\n    /**\n     *In which storage id vs. counts should be stored\n     *\n     * @type {('local' | 'session')}\n     * @memberof ToastPersistConfig\n     * @default 'local'\n     */\n    this.storage = 'local';\n    /**\n     *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.\n     *\n     * @type {('local' | 'session')}\n     * @memberof ToastPersistConfig\n     * @default 'ngneat/hottoast-${id}'\n     */\n\n    this.key = 'ngneat/hototast-${id}';\n    /**\n     *The number of toasts allowed to show.\n     *\n     * @memberof ToastPersistConfig\n     * @default 1\n     */\n\n    this.count = 1;\n    this.enabled = false;\n  }\n\n}\n\nlet HotToastService = /*#__PURE__*/(() => {\n  class HotToastService {\n    constructor(_viewService, platformId, config) {\n      this._viewService = _viewService;\n      this.platformId = platformId;\n      this._isInitialized = false;\n      this._defaultConfig = new ToastConfig();\n      this._defaultPersistConfig = new ToastPersistConfig();\n\n      if (config) {\n        this._defaultConfig = Object.assign(Object.assign({}, this._defaultConfig), config);\n      }\n    }\n\n    get defaultConfig() {\n      return this._defaultConfig;\n    }\n\n    set defaultConfig(config) {\n      this._defaultConfig = Object.assign(Object.assign({}, this._defaultConfig), config);\n\n      this._componentRef.setInput('defaultConfig', this._defaultConfig);\n    }\n    /**\n     * Opens up an hot-toast without any pre-configurations\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n\n\n    show(message, options) {\n      const toast = this.createToast(message || this._defaultConfig.blank.content, 'blank', Object.assign(Object.assign({}, this._defaultConfig), options));\n      return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for error state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n\n\n    error(message, options) {\n      var _a;\n\n      const toast = this.createToast(message || this._defaultConfig.error.content, 'error', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.error), options));\n      return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for success state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n\n\n    success(message, options) {\n      var _a;\n\n      const toast = this.createToast(message || this._defaultConfig.success.content, 'success', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.success), options));\n      return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for loading state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n\n\n    loading(message, options) {\n      var _a;\n\n      const toast = this.createToast(message || this._defaultConfig.loading.content, 'loading', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.loading), options));\n      return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for warning state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n\n\n    warning(message, options) {\n      var _a;\n\n      const toast = this.createToast(message || this._defaultConfig.warning.content, 'warning', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.warning), options));\n      return toast;\n    }\n    /**\n     *\n     *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages\n     *\n     * @template T Type of observable\n     * @param messages Messages for each state i.e. loading, success and error\n     * @returns\n     * @memberof HotToastService\n     */\n\n\n    observe(messages) {\n      return source => {\n        var _a, _b;\n\n        let toastRef;\n        let start = 0;\n        const loadingContent = messages.loading || ((_a = this._defaultConfig.loading) === null || _a === void 0 ? void 0 : _a.content);\n        const errorContent = messages.error || ((_b = this._defaultConfig.error) === null || _b === void 0 ? void 0 : _b.content);\n\n        if (loadingContent) {\n          toastRef = this.createLoadingToast(loadingContent);\n          start = Date.now();\n        }\n\n        return source.pipe(tap(Object.assign({\n          next: val => {\n            toastRef = this.createOrUpdateToast(messages, val, toastRef, 'success', start === 0 ? start : Date.now() - start);\n          }\n        }, errorContent && {\n          error: e => {\n            toastRef = this.createOrUpdateToast(messages, e, toastRef, 'error', start === 0 ? start : Date.now() - start);\n          }\n        })));\n      };\n    }\n    /**\n     * Closes the hot-toast\n     *\n     * @param id - ID of the toast\n     */\n\n\n    close(id) {\n      if (this._componentRef) {\n        this._componentRef.ref.instance.closeToast(id);\n      }\n    }\n    /**\n     * Used for internal purpose only.\n     * Creates a container component and attaches it to document.body.\n     */\n\n\n    init() {\n      if (isPlatformServer(this.platformId)) {\n        return;\n      }\n\n      this._componentRef = this._viewService.createComponent(HotToastContainerComponent).setInput('defaultConfig', this._defaultConfig).appendTo(document.body);\n    }\n\n    createOrUpdateToast(messages, val, toastRef, type, diff) {\n      let content = null;\n      let options = {};\n      ({\n        content,\n        options\n      } = this.getContentAndOptions(type, messages[type] || (this._defaultConfig[type] ? this._defaultConfig[type].content : '')));\n      content = resolveValueOrFunction(content, val);\n\n      if (toastRef) {\n        toastRef.updateMessage(content);\n        const updatedOptions = Object.assign(Object.assign({\n          type,\n          duration: diff + HOT_TOAST_DEFAULT_TIMEOUTS[type]\n        }, options), options.duration && {\n          duration: diff + options.duration\n        });\n        toastRef.updateToast(updatedOptions);\n      } else {\n        this.createToast(content, type, options);\n      }\n\n      return toastRef;\n    }\n\n    createToast(message, type, options, observableMessages) {\n      var _a, _b, _c, _d, _e, _f;\n\n      if (!this._isInitialized) {\n        this._isInitialized = true;\n        this.init();\n      }\n\n      const now = Date.now();\n      const id = (_a = options === null || options === void 0 ? void 0 : options.id) !== null && _a !== void 0 ? _a : now.toString();\n\n      if (!this.isDuplicate(id) && (!((_b = options.persist) === null || _b === void 0 ? void 0 : _b.enabled) || ((_c = options.persist) === null || _c === void 0 ? void 0 : _c.enabled) && this.handleStorageValue(id, options))) {\n        const toast = Object.assign({\n          ariaLive: (_d = options === null || options === void 0 ? void 0 : options.ariaLive) !== null && _d !== void 0 ? _d : 'polite',\n          createdAt: now,\n          duration: (_e = options === null || options === void 0 ? void 0 : options.duration) !== null && _e !== void 0 ? _e : HOT_TOAST_DEFAULT_TIMEOUTS[type],\n          id,\n          message,\n          role: (_f = options === null || options === void 0 ? void 0 : options.role) !== null && _f !== void 0 ? _f : 'status',\n          type,\n          visible: true,\n          observableMessages: observableMessages !== null && observableMessages !== void 0 ? observableMessages : undefined\n        }, options);\n        return new HotToastRef(toast).appendTo(this._componentRef.ref.instance);\n      }\n    }\n    /**\n     * Checks whether any toast with same id is present.\n     *\n     * @private\n     * @param id - Toast ID\n     */\n\n\n    isDuplicate(id) {\n      return this._componentRef.ref.instance.hasToast(id);\n    }\n    /**\n     * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.\n     * If present in storage, reduces the count\n     * and returns the count.\n     * Count can not be less than 0.\n     */\n\n\n    handleStorageValue(id, options) {\n      let count = 1;\n      const persist = Object.assign(Object.assign({}, this._defaultPersistConfig), options.persist);\n      const storage = persist.storage === 'local' ? localStorage : sessionStorage;\n      const key = persist.key.replace(/\\${id}/g, id);\n      let item = storage.getItem(key);\n\n      if (item) {\n        item = parseInt(item, 10);\n\n        if (item > 0) {\n          count = item - 1;\n        } else {\n          count = item;\n        }\n      } else {\n        count = persist.count;\n      }\n\n      storage.setItem(key, count.toString());\n      return count;\n    }\n\n    getContentAndOptions(toastType, message) {\n      var _a;\n\n      let content;\n      let options = Object.assign(Object.assign({}, this._defaultConfig), this._defaultConfig[toastType]); // typeof message === 'object' won't work, cz TemplateRef's type is object\n\n      if (typeof message === 'string' || isTemplateRef(message) || isComponent(message)) {\n        content = message;\n      } else {\n        let restOptions;\n        _a = message, ({\n          content\n        } = _a), restOptions = __rest(_a, [\"content\"]);\n        options = Object.assign(Object.assign({}, options), restOptions);\n      }\n\n      return {\n        content,\n        options\n      };\n    }\n\n    createLoadingToast(messages) {\n      let content = null;\n      let options = {};\n      ({\n        content,\n        options\n      } = this.getContentAndOptions('loading', messages));\n      return this.loading(content, options);\n    }\n\n  }\n\n  HotToastService.ɵfac = function HotToastService_Factory(t) {\n    return new (t || HotToastService)(ɵngcc0.ɵɵinject(ɵngcc2.ViewService), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ToastConfig, 8));\n  };\n\n  HotToastService.ɵprov = ɵɵdefineInjectable({\n    factory: function HotToastService_Factory() {\n      return new HotToastService(ɵɵinject(ViewService), ɵɵinject(PLATFORM_ID), ɵɵinject(ToastConfig, 8));\n    },\n    token: HotToastService,\n    providedIn: \"root\"\n  });\n  return HotToastService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet AnimatedIconComponent = /*#__PURE__*/(() => {\n  class AnimatedIconComponent {}\n\n  AnimatedIconComponent.ɵfac = function AnimatedIconComponent_Factory(t) {\n    return new (t || AnimatedIconComponent)();\n  };\n\n  AnimatedIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AnimatedIconComponent,\n    selectors: [[\"hot-toast-animated-icon\"]],\n    inputs: {\n      iconTheme: \"iconTheme\"\n    },\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 2,\n    consts: [[1, \"hot-toast-animated-icon\"]],\n    template: function AnimatedIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"color\", ctx.iconTheme == null ? null : ctx.iconTheme.primary);\n      }\n    },\n    styles: [\"@keyframes hotToastEnter{0%{transform:scale(0)}to{transform:scale(1)}}.hot-toast-animated-icon[_ngcontent-%COMP%]{animation:hotToastEnter .3s ease-in-out forwards;position:relative;transform:scale(0)}@media (prefers-reduced-motion:reduce){.hot-toast-animated-icon[_ngcontent-%COMP%]{animation-duration:none;opacity:1;transform:scale(1)}}\"],\n    changeDetection: 0\n  });\n  return AnimatedIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CheckMarkComponent = /*#__PURE__*/(() => {\n  class CheckMarkComponent {}\n\n  CheckMarkComponent.ɵfac = function CheckMarkComponent_Factory(t) {\n    return new (t || CheckMarkComponent)();\n  };\n\n  CheckMarkComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CheckMarkComponent,\n    selectors: [[\"hot-toast-checkmark\"]],\n    inputs: {\n      theme: \"theme\"\n    },\n    decls: 1,\n    vars: 4,\n    consts: [[1, \"hot-toast-checkmark-icon\"]],\n    template: function CheckMarkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"--check-primary\", (ctx.theme == null ? null : ctx.theme.primary) || \"#61d345\")(\"--check-secondary\", (ctx.theme == null ? null : ctx.theme.secondary) || \"#fff\");\n      }\n    },\n    styles: [\"@keyframes hotToastCircleAnimation{0%{opacity:0;transform:scale(0) rotate(45deg)}to{opacity:1;transform:scale(1) rotate(45deg)}}@keyframes hotToastCheckmarkAnimation{0%{height:0;opacity:0;width:0}40%{height:0;opacity:1;width:6px}to{height:10px;opacity:1}}.hot-toast-checkmark-icon[_ngcontent-%COMP%]{animation:hotToastCircleAnimation .3s cubic-bezier(.175,.885,.32,1.275) forwards;animation-delay:.1s;background:var(--check-primary,#61d345);border-radius:10px;height:20px;opacity:0;position:relative;transform:rotate(45deg);width:20px}@media (prefers-reduced-motion:reduce){.hot-toast-checkmark-icon[_ngcontent-%COMP%]{animation-duration:0ms}}.hot-toast-checkmark-icon[_ngcontent-%COMP%]:after{animation:hotToastCheckmarkAnimation .2s ease-out forwards;animation-delay:.2s;border-bottom:2px solid;border-bottom-color:var(--check-secondary,#fff);border-left-color:var(--check-secondary,#fff);border-right:2px solid;border-right-color:var(--check-secondary,#fff);border-top-color:var(--check-secondary,#fff);bottom:6px;box-sizing:border-box;content:\\\"\\\";height:10px;left:6px;opacity:0;position:absolute;width:6px}@media (prefers-reduced-motion:reduce){.hot-toast-checkmark-icon[_ngcontent-%COMP%]:after{animation-duration:0ms}}\"],\n    changeDetection: 0\n  });\n  return CheckMarkComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ErrorComponent = /*#__PURE__*/(() => {\n  class ErrorComponent {}\n\n  ErrorComponent.ɵfac = function ErrorComponent_Factory(t) {\n    return new (t || ErrorComponent)();\n  };\n\n  ErrorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ErrorComponent,\n    selectors: [[\"hot-toast-error\"]],\n    inputs: {\n      theme: \"theme\"\n    },\n    decls: 1,\n    vars: 4,\n    consts: [[1, \"hot-toast-error-icon\"]],\n    template: function ErrorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"--error-primary\", (ctx.theme == null ? null : ctx.theme.primary) || \"#ff4b4b\")(\"--error-secondary\", (ctx.theme == null ? null : ctx.theme.secondary) || \"#fff\");\n      }\n    },\n    styles: [\"@keyframes hotToastErrorCircleAnimation{0%{opacity:0;transform:scale(0) rotate(45deg)}to{opacity:1;transform:scale(1) rotate(45deg)}}@keyframes hotToastFirstLineAnimation{0%{opacity:0;transform:scale(0)}to{opacity:1;transform:scale(1)}}@keyframes hotToastSecondLineAnimation{0%{opacity:0;transform:scale(0) rotate(90deg)}to{opacity:1;transform:scale(1) rotate(90deg)}}.hot-toast-error-icon[_ngcontent-%COMP%]{animation:hotToastErrorCircleAnimation .3s cubic-bezier(.175,.885,.32,1.275) forwards;animation-delay:.1s;background:var(--error-primary,#ff4b4b);border-radius:10px;height:20px;opacity:0;position:relative;transform:rotate(45deg);width:20px}@media (prefers-reduced-motion:reduce){.hot-toast-error-icon[_ngcontent-%COMP%]{animation-duration:0ms}}.hot-toast-error-icon[_ngcontent-%COMP%]:after, .hot-toast-error-icon[_ngcontent-%COMP%]:before{animation:hotToastFirstLineAnimation .15s ease-out forwards;animation-delay:.15s;background:var(--error-secondary,#fff);border-radius:3px;bottom:9px;content:\\\"\\\";height:2px;left:4px;opacity:0;position:absolute;width:12px}@media (prefers-reduced-motion:reduce){.hot-toast-error-icon[_ngcontent-%COMP%]:after, .hot-toast-error-icon[_ngcontent-%COMP%]:before{animation-duration:0ms}}.hot-toast-error-icon[_ngcontent-%COMP%]:before{animation:hotToastSecondLineAnimation .15s ease-out forwards;animation-delay:.18s;transform:rotate(90deg)}@media (prefers-reduced-motion:reduce){.hot-toast-error-icon[_ngcontent-%COMP%]:before{animation-duration:0ms}}\"],\n    changeDetection: 0\n  });\n  return ErrorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LoaderComponent = /*#__PURE__*/(() => {\n  class LoaderComponent {}\n\n  LoaderComponent.ɵfac = function LoaderComponent_Factory(t) {\n    return new (t || LoaderComponent)();\n  };\n\n  LoaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LoaderComponent,\n    selectors: [[\"hot-toast-loader\"]],\n    inputs: {\n      theme: \"theme\"\n    },\n    decls: 1,\n    vars: 4,\n    consts: [[1, \"hot-toast-loader-icon\", 3, \"ngStyle\"]],\n    template: function LoaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction2(1, _c2, (ctx.theme == null ? null : ctx.theme.primary) || \"#e0e0e0\", (ctx.theme == null ? null : ctx.theme.secondary) || \"#616161\"));\n      }\n    },\n    directives: [ɵngcc1.NgStyle],\n    styles: [\"@keyframes hotToastRotate{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.hot-toast-loader-icon[_ngcontent-%COMP%]{animation:hotToastRotate 1s linear infinite;border:2px solid #e0e0e0;border-radius:100%;border-right-color:#616161;box-sizing:border-box;height:18px;padding-top:2px;width:18px}@media (prefers-reduced-motion:reduce){.hot-toast-loader-icon[_ngcontent-%COMP%]{animation-duration:5s}}\"],\n    changeDetection: 0\n  });\n  return LoaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IndicatorComponent = /*#__PURE__*/(() => {\n  class IndicatorComponent {}\n\n  IndicatorComponent.ɵfac = function IndicatorComponent_Factory(t) {\n    return new (t || IndicatorComponent)();\n  };\n\n  IndicatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: IndicatorComponent,\n    selectors: [[\"hot-toast-indicator\"]],\n    inputs: {\n      theme: \"theme\",\n      type: \"type\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"hot-toast-indicator-wrapper\"], [3, \"theme\"], [1, \"hot-toast-status-wrapper\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"]],\n    template: function IndicatorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, IndicatorComponent_ng_container_0_Template, 4, 2, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.type !== \"blank\");\n      }\n    },\n    directives: function () {\n      return [ɵngcc1.NgIf, LoaderComponent, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ErrorComponent, CheckMarkComponent, WarningComponent];\n    },\n    styles: [\".hot-toast-indicator-wrapper[_ngcontent-%COMP%]{align-items:center;display:flex;justify-content:center;min-height:20px;min-width:20px;position:relative}.hot-toast-status-wrapper[_ngcontent-%COMP%]{position:absolute}\"],\n    changeDetection: 0\n  });\n  return IndicatorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet WarningComponent = /*#__PURE__*/(() => {\n  class WarningComponent {}\n\n  WarningComponent.ɵfac = function WarningComponent_Factory(t) {\n    return new (t || WarningComponent)();\n  };\n\n  WarningComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: WarningComponent,\n    selectors: [[\"hot-toast-warning\"]],\n    inputs: {\n      theme: \"theme\"\n    },\n    decls: 1,\n    vars: 4,\n    consts: [[1, \"hot-toast-warning-icon\"]],\n    template: function WarningComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"--warn-primary\", (ctx.theme == null ? null : ctx.theme.primary) || \"#FFAB00\")(\"--warn-secondary\", (ctx.theme == null ? null : ctx.theme.secondary) || \"#fff\");\n      }\n    },\n    styles: [\"@keyframes animate-warn-background{0%{opacity:0;transform:scale(0)}to{opacity:1;transform:scale(1)}}@keyframes animate-warn-line{0%{height:0;opacity:0}40%{height:4.8px;opacity:1}to{height:8px;opacity:1}}.hot-toast-warning-icon[_ngcontent-%COMP%]{animation:animate-warn-background .3s cubic-bezier(.175,.885,.32,1.275) forwards;animation-delay:.1s;background-color:var(--warn-primary,#ffab00);border-radius:50%;display:block;height:20px;opacity:0;position:relative;transform:scale(0);width:20px}.hot-toast-warning-icon[_ngcontent-%COMP%]:after, .hot-toast-warning-icon[_ngcontent-%COMP%]:before{background-color:var(--warn-secondary,#fff);border-radius:3px;box-sizing:border-box;content:\\\"\\\";display:block;left:8.5px;position:absolute;width:2.5px}.hot-toast-warning-icon[_ngcontent-%COMP%]:after{animation:animate-warn-line .2s ease-out forwards;animation-delay:.2s;height:0;opacity:0;top:4px}.hot-toast-warning-icon[_ngcontent-%COMP%]:before{bottom:4px;height:2px}\"],\n    changeDetection: 0\n  });\n  return WarningComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet HotToastModule = /*#__PURE__*/(() => {\n  class HotToastModule {\n    static forRoot(config) {\n      return {\n        ngModule: HotToastModule,\n        providers: [{\n          provide: ToastConfig,\n          useValue: config\n        }]\n      };\n    }\n\n  }\n\n  HotToastModule.ɵfac = function HotToastModule_Factory(t) {\n    return new (t || HotToastModule)();\n  };\n\n  HotToastModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: HotToastModule\n  });\n  HotToastModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, DynamicContentModule]]\n  });\n  return HotToastModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HotToastModule, {\n    declarations: function () {\n      return [HotToastContainerComponent, HotToastComponent, AnimatedIconComponent, IndicatorComponent, CheckMarkComponent, ErrorComponent, LoaderComponent, WarningComponent];\n    },\n    imports: function () {\n      return [CommonModule, DynamicContentModule];\n    }\n  });\n})();\n/*\n * Public API Surface of hot-toast\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { HotToastModule, HotToastRef, HotToastService, ToastConfig, ToastPersistConfig, resolveValueOrFunction, ɵ0, HotToastContainerComponent as ɵa, HotToastComponent as ɵb, AnimatedIconComponent as ɵc, IndicatorComponent as ɵd, CheckMarkComponent as ɵe, ErrorComponent as ɵf, LoaderComponent as ɵg, WarningComponent as ɵh }; //# sourceMappingURL=ngneat-hot-toast.js.map","map":null,"metadata":{},"sourceType":"module"}