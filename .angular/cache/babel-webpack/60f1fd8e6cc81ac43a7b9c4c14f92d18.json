{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewChild, EventEmitter, Output, Input, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nconst _c0 = [\"canvasElement\"];\nlet AnalogueWatchComponent = /*#__PURE__*/(() => {\n  class AnalogueWatchComponent {\n    constructor() {}\n\n    ngOnDestroy() {\n      clearInterval(this.interval);\n    }\n\n    ngOnInit() {\n      const ctx = this.canvasElement.nativeElement.getContext('2d');\n      let radius = this.canvasElement.nativeElement.height / 2;\n      ctx.translate(radius, radius);\n      radius = radius * 0.9;\n      this.interval = setInterval(() => this.drawClock(ctx, radius), 1000);\n    }\n\n    drawClock(ctx, radius) {\n      ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = '#000';\n      ctx.fill();\n      this.drawFace(ctx, radius); //this.drawNumbers(ctx, radius);\n\n      this.drawTime(ctx, radius);\n    }\n\n    drawFace(ctx, radius) {\n      let grad;\n      ctx.beginPath();\n      ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = '#000';\n      ctx.fill();\n      grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n      grad.addColorStop(0, '#dedddd');\n      grad.addColorStop(0.5, 'white');\n      grad.addColorStop(1, '#dedddd');\n      ctx.strokeStyle = grad;\n      ctx.lineWidth = radius * 0.1; // ctx.stroke(); - Removing border to reduce burn in. For now.\n\n      ctx.beginPath();\n      ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);\n      ctx.fillStyle = '#dedddd';\n      ctx.fill();\n    }\n\n    drawNumbers(ctx, radius) {\n      let ang;\n      let num;\n      ctx.font = radius * 0.15 + 'px lato';\n      ctx.textBaseline = 'middle';\n      ctx.textAlign = 'center';\n\n      for (num = 1; num < 13; num++) {\n        ang = num * Math.PI / 6;\n        ctx.rotate(ang);\n        ctx.translate(0, -radius * 0.85);\n        ctx.rotate(-ang);\n        ctx.fillText(num.toString(), 0, 0);\n        ctx.rotate(ang);\n        ctx.translate(0, radius * 0.85);\n        ctx.rotate(-ang);\n      }\n    }\n\n    drawTime(ctx, radius) {\n      let now = new Date();\n      let hour = now.getHours();\n      let minute = now.getMinutes();\n      let second = now.getSeconds(); //hour\n\n      hour = hour % 12;\n      hour = hour * Math.PI / 6 + minute * Math.PI / (6 * 60) + second * Math.PI / (360 * 60);\n      this.drawHand(ctx, hour, radius * 0.5, radius * 0.07); //minute\n\n      minute = minute * Math.PI / 30 + second * Math.PI / (30 * 60);\n      this.drawHand(ctx, minute, radius * 0.8, radius * 0.07);\n    }\n\n    drawHand(ctx, pos, length, width) {\n      ctx.beginPath();\n      ctx.lineWidth = width;\n      ctx.lineCap = 'round';\n      ctx.moveTo(0, 0);\n      ctx.rotate(pos);\n      ctx.lineTo(0, -length);\n      ctx.stroke();\n      ctx.rotate(-pos);\n    }\n\n  }\n\n  AnalogueWatchComponent.ɵfac = function AnalogueWatchComponent_Factory(t) {\n    return new (t || AnalogueWatchComponent)();\n  };\n\n  AnalogueWatchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AnalogueWatchComponent,\n    selectors: [[\"yah-analogue-watch\"]],\n    viewQuery: function AnalogueWatchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasElement = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"width\", \"512px\", \"height\", \"512px\"], [\"canvasElement\", \"\"]],\n    template: function AnalogueWatchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", 0, 1);\n      }\n    },\n    styles: [\"canvas[_ngcontent-%COMP%]{animation:fadeEffect 1s;transition:ease-in all}@keyframes fadeEffect{0%{opacity:0}to{opacity:1}}\"],\n    data: {\n      animation: []\n    }\n  });\n  return AnalogueWatchComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ScreenSaverComponent = /*#__PURE__*/(() => {\n  class ScreenSaverComponent {\n    constructor(router) {\n      this.router = router;\n      setInterval(() => {\n        this.time = new Date().toLocaleTimeString('DE');\n      }, 1000);\n    }\n\n    ngOnInit() {}\n\n    returnToMainScreen() {\n      this.router.navigate(['']).then();\n    }\n\n  }\n\n  ScreenSaverComponent.ɵfac = function ScreenSaverComponent_Factory(t) {\n    return new (t || ScreenSaverComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  ScreenSaverComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScreenSaverComponent,\n    selectors: [[\"yah-screen-saver\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"backdrop\", 3, \"click\"]],\n    template: function ScreenSaverComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function ScreenSaverComponent_Template_div_click_0_listener() {\n          return ctx.returnToMainScreen();\n        });\n        i0.ɵɵelement(1, \"yah-analogue-watch\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [AnalogueWatchComponent],\n    styles: [\"div.backdrop[_ngcontent-%COMP%]{width:100%;height:100vh;background:#000}div.backdrop[_ngcontent-%COMP%]   div.time[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;color:#787676;font-size:10rem;height:20rem}div.backdrop[_ngcontent-%COMP%]   yah-analogue-watch[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;width:100%;height:100vh}\"]\n  });\n  return ScreenSaverComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction CounterComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(\" \" + ctx_r0._unit);\n  }\n}\n\nlet CounterComponent = /*#__PURE__*/(() => {\n  class CounterComponent {\n    constructor() {\n      // tslint:disable-next-line:variable-name\n      this._value = 0;\n      this.value = new EventEmitter(); // tslint:disable-next-line:variable-name\n\n      this._canBeNegative = true;\n    }\n\n    set canBeNegative(canBeNegative) {\n      this._canBeNegative = canBeNegative;\n    }\n\n    set unit(unit) {\n      this._unit = unit;\n    }\n\n    set setValue(value) {\n      this._value = value;\n    }\n\n    ngOnInit() {}\n\n    decrement() {\n      if (this._value < 1 && !this._canBeNegative) {\n        return;\n      }\n\n      this._value--;\n      this.value.next(this._value);\n    }\n\n    increment() {\n      this._value++;\n      this.value.next(this._value);\n    }\n\n  }\n\n  CounterComponent.ɵfac = function CounterComponent_Factory(t) {\n    return new (t || CounterComponent)();\n  };\n\n  CounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CounterComponent,\n    selectors: [[\"yah-counter\"]],\n    inputs: {\n      canBeNegative: \"canBeNegative\",\n      unit: \"unit\",\n      setValue: \"setValue\"\n    },\n    outputs: {\n      value: \"value\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"min\", 3, \"click\"], [1, \"display\"], [4, \"ngIf\"], [1, \"plus\", 3, \"click\"]],\n    template: function CounterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_div_click_1_listener() {\n          return ctx.decrement();\n        });\n        i0.ɵɵtext(2, \"-\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵtemplate(5, CounterComponent_ng_container_5_Template, 2, 1, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_div_click_6_listener() {\n          return ctx.increment();\n        });\n        i0.ɵɵtext(7, \"+\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx._value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._unit);\n      }\n    },\n    directives: [i1$1.NgIf],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;flex-direction:row;border:1px solid;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border-radius:.8rem;grid-gap:1rem;gap:1rem;align-items:center;font-size:2rem;background:rgba(255,255,255,.3);-webkit-user-select:none;user-select:none}.container[_ngcontent-%COMP%]   .min[_ngcontent-%COMP%]{padding:1rem;border-radius:.4rem 0 0 .4em}.container[_ngcontent-%COMP%]   .min[_ngcontent-%COMP%]:active{background:#fff}.container[_ngcontent-%COMP%]   .plus[_ngcontent-%COMP%]{padding:1rem;border-radius:0 .4rem .4rem 0}.container[_ngcontent-%COMP%]   .plus[_ngcontent-%COMP%]:active{background:#fff}\"]\n  });\n  return CounterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet UiModule = /*#__PURE__*/(() => {\n  class UiModule {}\n\n  UiModule.ɵfac = function UiModule_Factory(t) {\n    return new (t || UiModule)();\n  };\n\n  UiModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: UiModule\n  });\n  UiModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, RouterModule.forChild([{\n      path: '',\n      component: ScreenSaverComponent\n    }])]]\n  });\n  return UiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(UiModule, {\n    declarations: [ScreenSaverComponent, AnalogueWatchComponent, CounterComponent],\n    imports: [CommonModule, i1.RouterModule],\n    exports: [ScreenSaverComponent, CounterComponent]\n  });\n})();\n/*\n * Public API Surface of yah-ui\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CounterComponent, ScreenSaverComponent, UiModule };","map":null,"metadata":{},"sourceType":"module"}