{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewChild, NgModule } from '@angular/core';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { map, tap, filter, switchMap, timeout, take, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\nimport * as i1 from '@angular/common/http';\nimport * as i2 from '@ngx-pwa/local-storage';\nimport * as i3 from '@ngneat/hot-toast';\nimport * as i4 from '@angular/router';\nimport * as i2$1 from 'ngx-spinner';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nlet CleaningService = /*#__PURE__*/(() => {\n  class CleaningService {\n    constructor(http, localDb, toastMessage, router) {\n      this.http = http;\n      this.localDb = localDb;\n      this.toastMessage = toastMessage;\n      this.router = router;\n      this.IROBOT_IS_ACTIVATED_KEY = 'IROBOT_IS_ACTIVATED';\n      this.IROBOT_SERVER_URL_KEY = 'IROBOT_SERVER_URL';\n      this.isActivated$ = this.localDb.get(this.IROBOT_IS_ACTIVATED_KEY, {\n        type: 'boolean'\n      });\n      this.serverUrl$ = combineLatest([localDb.watch(this.IROBOT_SERVER_URL_KEY, {\n        type: 'string'\n      }), this.isActivated$]).pipe(map(([res, isActivated]) => {\n        if (!isActivated) {\n          return;\n        }\n\n        if (isActivated === undefined || res === undefined) {\n          this.toastMessage.warning('Lass uns uns sachen erstmal einstellen ', {\n            style: {\n              background: 'rgba(255, 255, 255, 0.8)'\n            },\n            dismissible: true,\n            ariaLive: 'polite'\n          });\n          this.router.navigate(['setup']).then();\n          return;\n        }\n\n        return res;\n      }), tap(res => this.iRobotURL = res));\n      this.status$ = this.serverUrl$.pipe(filter(serverUrl => !!serverUrl), switchMap(serverUrl => {\n        return this.http.get(`http://${serverUrl}/api/local/info/mission`);\n      }));\n    }\n\n    checkiRobotServer(ip) {\n      let formattedIp = ip.replace('http://', '');\n      formattedIp = formattedIp.replace('/api/local/info/mission', '');\n      formattedIp = formattedIp.replace('/', '');\n      return this.http.get(`http://${formattedIp}/api/local/info/mission`, {\n        observe: 'response'\n      }).pipe(timeout(3000));\n    }\n\n    startRobot() {\n      return this.http.get(`http://${this.iRobotURL}/api/local/action/start`, {\n        observe: 'response'\n      }).pipe(map(response => !!response.status));\n    }\n\n    stopRobot() {\n      return this.http.get(`http://${this.iRobotURL}/api/local/action/stop`, {\n        observe: 'response'\n      }).pipe(map(response => !!response.status));\n    }\n\n    saveiRobotIp(input) {\n      return this.localDb.set(this.IROBOT_SERVER_URL_KEY, input, {\n        type: 'string'\n      });\n    }\n\n    saveActivated(isActivated) {\n      return this.localDb.set(this.IROBOT_IS_ACTIVATED_KEY, isActivated, {\n        type: 'boolean'\n      });\n    }\n\n  }\n\n  CleaningService.ɵfac = function CleaningService_Factory(t) {\n    return new (t || CleaningService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StorageMap), i0.ɵɵinject(i3.HotToastService), i0.ɵɵinject(i4.Router));\n  };\n\n  CleaningService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CleaningService,\n    factory: CleaningService.ɵfac,\n    providedIn: 'root'\n  });\n  return CleaningService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction CleaningButtonComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵelement(3, \"span\", 7);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function CleaningButtonComponent_div_5_Template_div_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.startRobot();\n    });\n    i0.ɵɵtext(7, \"Start\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 9);\n    i0.ɵɵlistener(\"click\", function CleaningButtonComponent_div_5_Template_div_click_8_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.stopRobot();\n    });\n    i0.ɵɵtext(9, \"Stop\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.robotStatus, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.robotBattery, \" %\");\n  }\n}\n\nlet CleaningButtonComponent = /*#__PURE__*/(() => {\n  class CleaningButtonComponent {\n    constructor(cleaningService, ngxSpinnerService) {\n      this.cleaningService = cleaningService;\n      this.ngxSpinnerService = ngxSpinnerService;\n      this.robotAvailable = false;\n      this.robotBattery = 0;\n      this.SPINNER_NAME = 'cleaning-connection-spinner';\n      this.robotStatus = '';\n      this.ngxSpinnerService.show(this.SPINNER_NAME);\n      this.cleaningService.status$.subscribe(status => {\n        this.ngxSpinnerService.hide(this.SPINNER_NAME);\n        this.robotStatus = 'Robot verfügbar';\n        this.robotAvailable = !!status.cleanMissionStatus.phase;\n        this.robotBattery = status.batPct;\n      });\n    }\n\n    ngOnInit() {}\n\n    startRobot() {\n      this.cleaningService.startRobot().pipe(take(1)).subscribe(succesful => {\n        if (succesful === true) {\n          this.robotStatus = 'Unterwegs Putzen';\n        }\n      });\n    }\n\n    stopRobot() {\n      this.cleaningService.stopRobot().pipe(take(1)).subscribe(succesful => {\n        if (succesful === true) {\n          this.robotStatus = 'Robot verfügbar';\n        }\n      });\n    }\n\n  }\n\n  CleaningButtonComponent.ɵfac = function CleaningButtonComponent_Factory(t) {\n    return new (t || CleaningButtonComponent)(i0.ɵɵdirectiveInject(CleaningService), i0.ɵɵdirectiveInject(i2$1.NgxSpinnerService));\n  };\n\n  CleaningButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CleaningButtonComponent,\n    selectors: [[\"yah-cleaning-button\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"box\"], [1, \"header\"], [\"src\", \"./assets/cleaner.svg\"], [\"name\", \"cleaning-connection-spinner\", \"bdColor\", \"rgba(0,0,0,0)\", \"size\", \"medium\", \"color\", \"#fff\", \"type\", \"square-loader\", 3, \"fullScreen\"], [\"class\", \"robot-status\", 4, \"ngIf\"], [1, \"robot-status\"], [1, \"battery\"], [1, \"gg-battery\"], [1, \"cleaning-button\", 3, \"click\"], [1, \"stop-cleaning-button\", 3, \"click\"]],\n    template: function CleaningButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵtext(3, \" iRobot \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"ngx-spinner\", 3);\n        i0.ɵɵtemplate(5, CleaningButtonComponent_div_5_Template, 10, 2, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"fullScreen\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.robotAvailable);\n      }\n    },\n    directives: [i2$1.NgxSpinnerComponent, i3$1.NgIf],\n    styles: [\".box[_ngcontent-%COMP%]{position:relative;background:rgba(255,255,255,.25);border:1px solid rgba(255,255,255,.2);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;min-height:20rem;min-width:20rem;transition:all 50ms ease}.box[_ngcontent-%COMP%]:active{box-shadow:0 .4rem 2rem #0000005e}.box[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{border-radius:.7rem .7rem 0 0;background:#fff;color:#000;font-size:2rem;display:grid;grid-template-columns:20fr 80fr;padding:.5rem 1rem}.box[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:3rem;height:3rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]{width:inherit;display:flex;justify-content:center;flex-direction:column;align-items:center;grid-gap:1rem;gap:1rem;margin-top:1rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .cleaning-button[_ngcontent-%COMP%]{padding:1rem;background:#33dbc6;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .cleaning-button[_ngcontent-%COMP%]:active{background:#34e0a0}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .stop-cleaning-button[_ngcontent-%COMP%]{padding:1rem;background:#d91313;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .stop-cleaning-button[_ngcontent-%COMP%]:active{background:#ea1313}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]{display:flex;align-items:center;flex-direction:row;grid-gap:1rem;gap:1rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;display:block;width:2rem;height:.9rem;transform:scale(var(--ggs, 1));border:2px solid;border-radius:3px;margin-left:-3px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:after, .box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:before{content:\\\"\\\";display:block;box-sizing:border-box;position:absolute;height:.5rem;background:currentColor;top:1px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:before{right:-4px;border-radius:3px;width:4px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:after{width:1.6rem;left:1px}\"]\n  });\n  return CleaningButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst _c0 = [\"ipInput\"];\nlet CleaningSetupComponent = /*#__PURE__*/(() => {\n  class CleaningSetupComponent {\n    constructor(cleaningService, toastMessage) {\n      this.cleaningService = cleaningService;\n      this.toastMessage = toastMessage;\n      this.isActivated = false;\n      this.validIp = 'disconnected';\n      this.cleaningService.isActivated$.subscribe(res => {\n        this.isActivated = res;\n      });\n      this.cleaningService.serverUrl$.subscribe(res => {\n        this.ipInput.nativeElement.value = res ? res : '';\n        this.validIp = res ? 'connected' : 'disconnected';\n      });\n    }\n\n    ngOnInit() {}\n\n    setChecked($event) {\n      const input = $event.target;\n      this.cleaningService.saveActivated(input.checked).subscribe(() => {\n        this.toastMessage.success('iRobot Server Einstellungen sind gespeichert', {\n          style: {\n            background: 'rgba(255, 255, 255, 0.8)'\n          },\n          dismissible: true,\n          ariaLive: 'polite',\n          id: 'hue-saved'\n        });\n      });\n    }\n\n    checkIP() {\n      const input = this.ipInput.nativeElement.value;\n\n      if (input.length > 1) {\n        this.validIp = 'loading'; // Have we already fired it? Then let it run out..\n\n        if (this.checkingSubscription) {\n          this.checkingSubscription.unsubscribe();\n        }\n\n        this.checkingSubscription = this.cleaningService.checkiRobotServer(input).pipe(debounceTime(750), distinctUntilChanged(), take(1)).subscribe(res => {\n          res.status === 200 ? this.setiRobotValidIp(input) : this.showErrorMessage();\n        }, err => this.showErrorMessage());\n      }\n    }\n\n    showErrorMessage() {\n      this.validIp = 'disconnected';\n    }\n\n    setiRobotValidIp(input) {\n      this.checkingSubscription.unsubscribe();\n      this.validIp = 'connected';\n      this.cleaningService.saveiRobotIp(input).subscribe(() => {\n        this.ipInput.nativeElement.value = input;\n        this.toastMessage.success('iRobot Server Einstellungen sind gespeichert', {\n          style: {\n            background: 'rgba(255, 255, 255, 0.8)'\n          },\n          dismissible: true,\n          ariaLive: 'polite',\n          id: 'hue-saved'\n        });\n      });\n    }\n\n  }\n\n  CleaningSetupComponent.ɵfac = function CleaningSetupComponent_Factory(t) {\n    return new (t || CleaningSetupComponent)(i0.ɵɵdirectiveInject(CleaningService), i0.ɵɵdirectiveInject(i3.HotToastService));\n  };\n\n  CleaningSetupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CleaningSetupComponent,\n    selectors: [[\"yah-cleaning-setup\"]],\n    viewQuery: function CleaningSetupComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ipInput = _t.first);\n      }\n    },\n    decls: 16,\n    vars: 4,\n    consts: [[\"src\", \"assets/cleaner.svg\", \"width\", \"32\"], [1, \"no-margin\"], [1, \"switch\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"slider\"], [1, \"input-row\"], [\"type\", \"text\", 1, \"input-frosted\", 3, \"input\"], [\"ipInput\", \"\"]],\n    template: function CleaningSetupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\");\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵelement(2, \"img\", 0);\n        i0.ɵɵtext(3, \" iRobot Server Einstellungen \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 1);\n        i0.ɵɵtext(5, \" Aktiviert \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"label\", 2);\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"change\", function CleaningSetupComponent_Template_input_change_7_listener($event) {\n          return ctx.setChecked($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"p\");\n        i0.ɵɵelementStart(10, \"p\", 1);\n        i0.ɵɵtext(11, \" IP \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelementStart(13, \"input\", 6, 7);\n        i0.ɵɵlistener(\"input\", function CleaningSetupComponent_Template_input_input_13_listener() {\n          return ctx.checkIP();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"i\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"checked\", ctx.isActivated);\n        i0.ɵɵadvance(8);\n        i0.ɵɵclassMapInterpolate1(\"symbol \", ctx.validIp, \"\");\n      }\n    },\n    styles: [\"form[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-direction:column}form[_ngcontent-%COMP%]   .no-margin[_ngcontent-%COMP%]{margin:0}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]{display:flex;align-items:center}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .input-frosted[_ngcontent-%COMP%]{color:#fff;font-size:1.4rem;font-weight:800;padding:1rem;border:none;background:rgba(255,255,255,.4);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;max-width:90%}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol[_ngcontent-%COMP%]{width:2rem;height:2rem;margin-left:.5rem}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.connected[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22iso-8859-1%22%3F%3E%0D%3C!-- Generator%3A Adobe Illustrator 19.0.0%2C SVG Export Plug-In . SVG Version%3A 6.00 Build 0)  --%3E%0D%3Csvg version%3D%221.1%22 id%3D%22Layer_1%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 x%3D%220px%22 y%3D%220px%22%0D%09 viewBox%3D%220 0 511.999 511.999%22 style%3D%22enable-background%3Anew 0 0 511.999 511.999%3B%22 xml%3Aspace%3D%22preserve%22%3E%0D%3Cpath style%3D%22fill%3A%23B7E183%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L163.89%2C370.299L53.284%2C259.693%0D%09c-12.201-12.204-31.952-12.205-44.154-0.001c-12.173%2C12.174-12.173%2C31.981%2C0%2C44.153L141.814%2C436.53%0D%09c12.199%2C12.198%2C31.953%2C12.2%2C44.153%2C0L502.87%2C119.626C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cpath style%3D%22fill%3A%2371DE56%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L243.511%2C290.678v88.306L502.87%2C119.626%0D%09C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3C%2Fsvg%3E%0D\\\") no-repeat}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.disconnected[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3Csvg height%3D%22100%25%22 viewBox%3D%220 0 329.26933 329%22 width%3D%2220%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg fill%3D%22%23f44336%22%3E%3Cpath d%3D%22m21.339844 329.398438c-5.460938 0-10.925782-2.089844-15.082032-6.25-8.34375-8.339844-8.34375-21.824219 0-30.164063l286.589844-286.59375c8.339844-8.339844 21.824219-8.339844 30.164063 0 8.34375 8.339844 8.34375 21.824219 0 30.164063l-286.589844 286.59375c-4.183594 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3Cpath d%3D%22m307.929688 329.398438c-5.460938 0-10.921876-2.089844-15.082032-6.25l-286.589844-286.59375c-8.34375-8.339844-8.34375-21.824219 0-30.164063 8.339844-8.339844 21.820313-8.339844 30.164063 0l286.589844 286.59375c8.34375 8.339844 8.34375 21.824219 0 30.164063-4.160157 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\") center no-repeat}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.loading[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22 standalone%3D%22no%22%3F%3E%3Csvg xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.0%22 width%3D%22100pt%22 height%3D%22100pt%22 viewBox%3D%220 0 128 128%22 xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23000%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23f8f8f8%22 transform%3D%22rotate(30 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23e8e8e8%22 transform%3D%22rotate(60 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23d4d4d4%22 transform%3D%22rotate(90 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23bebebe%22 transform%3D%22rotate(120 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23a6a6a6%22 transform%3D%22rotate(150 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%238e8e8e%22 transform%3D%22rotate(180 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23737373%22 transform%3D%22rotate(210 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%235a5a5a%22 transform%3D%22rotate(240 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23414141%22 transform%3D%22rotate(270 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%232a2a2a%22 transform%3D%22rotate(300 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23151515%22 transform%3D%22rotate(330 64 64)%22%2F%3E%3CanimateTransform attributeName%3D%22transform%22 type%3D%22rotate%22 values%3D%220 64 64%3B30 64 64%3B60 64 64%3B90 64 64%3B120 64 64%3B150 64 64%3B180 64 64%3B210 64 64%3B240 64 64%3B270 64 64%3B300 64 64%3B330 64 64%22 calcMode%3D%22discrete%22 dur%3D%22240ms%22 repeatCount%3D%22indefinite%22%3E%3C%2FanimateTransform%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");background-size:contain}.switch[_ngcontent-%COMP%]{position:relative;display:inline-block;width:60px;height:34px}.switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{opacity:0;width:0;height:0}.slider[_ngcontent-%COMP%]{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.slider[_ngcontent-%COMP%]:before{position:absolute;content:\\\"\\\";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]{background-color:#2196f3}input[_ngcontent-%COMP%]:focus + .slider[_ngcontent-%COMP%]{box-shadow:0 0 1px #2196f3}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]:before{transform:translate(26px)}\"]\n  });\n  return CleaningSetupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CleaningModule = /*#__PURE__*/(() => {\n  class CleaningModule {}\n\n  CleaningModule.ɵfac = function CleaningModule_Factory(t) {\n    return new (t || CleaningModule)();\n  };\n\n  CleaningModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CleaningModule\n  });\n  CleaningModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgxSpinnerModule]]\n  });\n  return CleaningModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CleaningModule, {\n    declarations: [CleaningButtonComponent, CleaningSetupComponent],\n    imports: [CommonModule, NgxSpinnerModule],\n    exports: [CleaningButtonComponent, CleaningSetupComponent]\n  });\n})();\n/*\n * Public API Surface of yah-cleaning\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CleaningButtonComponent, CleaningModule, CleaningService, CleaningSetupComponent }; //# sourceMappingURL=yah-cleaning.mjs.map","map":null,"metadata":{},"sourceType":"module"}