{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SetupComponent } from './components/setup/setup.component';\nimport { LightModule, LightSetupComponent } from 'yah-light';\nimport { SolarModule, SolarSetupComponent } from 'yah-solar';\nimport { CleaningModule, CleaningSetupComponent } from 'yah-cleaning';\nimport { WeatherModule, WeatherSetupComponent } from 'yah-weather';\nimport { SetupmenuComponent } from './components/setupmenu/setupmenu.component';\nimport { UiModule } from 'yah-ui';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const routes = [{\n  path: 'setup',\n  component: SetupComponent,\n  children: [{\n    path: '',\n    component: SetupmenuComponent,\n    outlet: 'options'\n  }, {\n    path: 'weather',\n    outlet: 'options',\n    component: WeatherSetupComponent\n  }, {\n    path: 'solar',\n    outlet: 'options',\n    component: SolarSetupComponent\n  }, {\n    path: 'light',\n    outlet: 'options',\n    component: LightSetupComponent\n  }, {\n    path: 'cleaning',\n    outlet: 'options',\n    component: CleaningSetupComponent\n  }]\n}];\nexport let SetupModule = /*#__PURE__*/(() => {\n  class SetupModule {\n    constructor() {}\n\n  }\n\n  SetupModule.ɵfac = function SetupModule_Factory(t) {\n    return new (t || SetupModule)();\n  };\n\n  SetupModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: SetupModule\n  });\n  SetupModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forChild(routes), CommonModule, LightModule, CleaningModule, SolarModule, WeatherModule, UiModule]]\n  });\n  return SetupModule;\n})();","map":null,"metadata":{},"sourceType":"module"}