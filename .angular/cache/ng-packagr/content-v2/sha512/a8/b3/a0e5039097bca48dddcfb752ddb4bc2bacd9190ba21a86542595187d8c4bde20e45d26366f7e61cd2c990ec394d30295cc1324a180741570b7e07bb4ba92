{"hash":"057b79a768461998b9102dc01805f78836ba7b45","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewChild, NgModule } from '@angular/core';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { map, tap, filter, switchMap, timeout, take, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\nimport * as i1 from '@angular/common/http';\nimport * as i2 from '@ngx-pwa/local-storage';\nimport * as i3 from '@ngneat/hot-toast';\nimport * as i4 from '@angular/router';\nimport * as i2$1 from 'ngx-spinner';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nclass CleaningService {\n    constructor(http, localDb, toastMessage, router) {\n        this.http = http;\n        this.localDb = localDb;\n        this.toastMessage = toastMessage;\n        this.router = router;\n        this.IROBOT_IS_ACTIVATED_KEY = 'IROBOT_IS_ACTIVATED';\n        this.IROBOT_SERVER_URL_KEY = 'IROBOT_SERVER_URL';\n        this.isActivated$ = this.localDb.get(this.IROBOT_IS_ACTIVATED_KEY, {\n            type: 'boolean',\n        });\n        this.serverUrl$ = combineLatest([\n            localDb.watch(this.IROBOT_SERVER_URL_KEY, { type: 'string' }),\n            this.isActivated$,\n        ]).pipe(map(([res, isActivated]) => {\n            if (!isActivated) {\n                return;\n            }\n            if (isActivated === undefined || res === undefined) {\n                this.toastMessage.warning('Lass uns uns sachen erstmal einstellen ', {\n                    style: {\n                        background: 'rgba(255, 255, 255, 0.8)',\n                    },\n                    dismissible: true,\n                    ariaLive: 'polite',\n                });\n                this.router.navigate(['setup']).then();\n                return;\n            }\n            return res;\n        }), tap((res) => (this.iRobotURL = res)));\n        this.status$ = this.serverUrl$.pipe(filter((serverUrl) => !!serverUrl), switchMap((serverUrl) => {\n            return this.http\n                .get(`http://${serverUrl}/api/local/info/mission`);\n        }));\n    }\n    checkiRobotServer(ip) {\n        let formattedIp = ip.replace('http://', '');\n        formattedIp = formattedIp.replace('/api/local/info/mission', '');\n        formattedIp = formattedIp.replace('/', '');\n        return this.http\n            .get(`http://${formattedIp}/api/local/info/mission`, {\n            observe: 'response',\n        })\n            .pipe(timeout(3000));\n    }\n    startRobot() {\n        return this.http\n            .get(`http://${this.iRobotURL}/api/local/action/start`, { observe: 'response' })\n            .pipe(map((response) => !!response.status));\n    }\n    stopRobot() {\n        return this.http\n            .get(`http://${this.iRobotURL}/api/local/action/stop`, { observe: 'response' })\n            .pipe(map((response) => !!response.status));\n    }\n    saveiRobotIp(input) {\n        return this.localDb.set(this.IROBOT_SERVER_URL_KEY, input, {\n            type: 'string',\n        });\n    }\n    saveActivated(isActivated) {\n        return this.localDb.set(this.IROBOT_IS_ACTIVATED_KEY, isActivated, {\n            type: 'boolean',\n        });\n    }\n}\nCleaningService.ɵfac = function CleaningService_Factory(t) { return new (t || CleaningService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StorageMap), i0.ɵɵinject(i3.HotToastService), i0.ɵɵinject(i4.Router)); };\nCleaningService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CleaningService, factory: CleaningService.ɵfac, providedIn: 'root' });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root',\n            }]\n    }], function () { return [{ type: i1.HttpClient }, { type: i2.StorageMap }, { type: i3.HotToastService }, { type: i4.Router }]; }, null); })();\n\nfunction CleaningButtonComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵelement(3, \"span\", 7);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function CleaningButtonComponent_div_5_Template_div_click_6_listener() { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.startRobot(); });\n    i0.ɵɵtext(7, \"Start\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 9);\n    i0.ɵɵlistener(\"click\", function CleaningButtonComponent_div_5_Template_div_click_8_listener() { i0.ɵɵrestoreView(_r2); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.stopRobot(); });\n    i0.ɵɵtext(9, \"Stop\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.robotStatus, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.robotBattery, \" %\");\n} }\nclass CleaningButtonComponent {\n    constructor(cleaningService, ngxSpinnerService) {\n        this.cleaningService = cleaningService;\n        this.ngxSpinnerService = ngxSpinnerService;\n        this.robotAvailable = false;\n        this.robotBattery = 0;\n        this.SPINNER_NAME = 'cleaning-connection-spinner';\n        this.robotStatus = '';\n        this.ngxSpinnerService.show(this.SPINNER_NAME);\n        this.cleaningService.status$.subscribe((status) => {\n            this.ngxSpinnerService.hide(this.SPINNER_NAME);\n            this.robotStatus = 'Robot verfügbar';\n            this.robotAvailable = !!status.cleanMissionStatus.phase;\n            this.robotBattery = status.batPct;\n        });\n    }\n    ngOnInit() { }\n    startRobot() {\n        this.cleaningService\n            .startRobot()\n            .pipe(take(1))\n            .subscribe((succesful) => {\n            if (succesful === true) {\n                this.robotStatus = 'Unterwegs Putzen';\n            }\n        });\n    }\n    stopRobot() {\n        this.cleaningService.stopRobot().pipe(take(1)).subscribe((succesful) => {\n            if (succesful === true) {\n                this.robotStatus = 'Robot verfügbar';\n            }\n        });\n    }\n}\nCleaningButtonComponent.ɵfac = function CleaningButtonComponent_Factory(t) { return new (t || CleaningButtonComponent)(i0.ɵɵdirectiveInject(CleaningService), i0.ɵɵdirectiveInject(i2$1.NgxSpinnerService)); };\nCleaningButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CleaningButtonComponent, selectors: [[\"yah-cleaning-button\"]], decls: 6, vars: 2, consts: [[1, \"box\"], [1, \"header\"], [\"src\", \"./assets/cleaner.svg\"], [\"name\", \"cleaning-connection-spinner\", \"bdColor\", \"rgba(0,0,0,0)\", \"size\", \"medium\", \"color\", \"#fff\", \"type\", \"square-loader\", 3, \"fullScreen\"], [\"class\", \"robot-status\", 4, \"ngIf\"], [1, \"robot-status\"], [1, \"battery\"], [1, \"gg-battery\"], [1, \"cleaning-button\", 3, \"click\"], [1, \"stop-cleaning-button\", 3, \"click\"]], template: function CleaningButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵtext(3, \" iRobot \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"ngx-spinner\", 3);\n        i0.ɵɵtemplate(5, CleaningButtonComponent_div_5_Template, 10, 2, \"div\", 4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"fullScreen\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.robotAvailable);\n    } }, directives: [i2$1.NgxSpinnerComponent, i3$1.NgIf], styles: [\".box[_ngcontent-%COMP%]{position:relative;background:rgba(255,255,255,.25);border:1px solid rgba(255,255,255,.2);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;min-height:20rem;min-width:20rem;transition:all 50ms ease}.box[_ngcontent-%COMP%]:active{box-shadow:0 .4rem 2rem #0000005e}.box[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{border-radius:.7rem .7rem 0 0;background:#fff;color:#000;font-size:2rem;display:grid;grid-template-columns:20fr 80fr;padding:.5rem 1rem}.box[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:3rem;height:3rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]{width:inherit;display:flex;justify-content:center;flex-direction:column;align-items:center;grid-gap:1rem;gap:1rem;margin-top:1rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .cleaning-button[_ngcontent-%COMP%]{padding:1rem;background:#33dbc6;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .cleaning-button[_ngcontent-%COMP%]:active{background:#34e0a0}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .stop-cleaning-button[_ngcontent-%COMP%]{padding:1rem;background:#d91313;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .stop-cleaning-button[_ngcontent-%COMP%]:active{background:#ea1313}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]{display:flex;align-items:center;flex-direction:row;grid-gap:1rem;gap:1rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;display:block;width:2rem;height:.9rem;transform:scale(var(--ggs, 1));border:2px solid;border-radius:3px;margin-left:-3px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:after, .box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:before{content:\\\"\\\";display:block;box-sizing:border-box;position:absolute;height:.5rem;background:currentColor;top:1px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:before{right:-4px;border-radius:3px;width:4px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:after{width:1.6rem;left:1px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningButtonComponent, [{\n        type: Component,\n        args: [{ selector: 'yah-cleaning-button', template: \"<div class=\\\"box\\\">\\n  <div class=\\\"header\\\"><img src=\\\"./assets/cleaner.svg\\\" /> iRobot </div>\\n\\n  <ngx-spinner\\n    name=\\\"cleaning-connection-spinner\\\"\\n    bdColor=\\\"rgba(0,0,0,0)\\\"\\n    size=\\\"medium\\\"\\n    color=\\\"#fff\\\"\\n    type=\\\"square-loader\\\"\\n    [fullScreen]=\\\"false\\\"\\n    ></ngx-spinner\\n  >\\n\\n  <div class=\\\"robot-status\\\" *ngIf=\\\"robotAvailable\\\">\\n    {{ robotStatus }}\\n    <div class=\\\"battery\\\">\\n      <span class=\\\"gg-battery\\\"></span>\\n      <span> {{ robotBattery }} %</span>\\n    </div>\\n    <div class=\\\"cleaning-button\\\" (click)=\\\"startRobot()\\\">Start</div>\\n    <div class=\\\"stop-cleaning-button\\\" (click)=\\\"stopRobot()\\\">Stop</div>\\n  </div>\\n</div>\\n\\n<!-- <div>Icons made by <a href=\\\"https://www.flaticon.com/authors/creaticca-creative-agency\\\" title=\\\"Creaticca Creative Agency\\\">Creaticca Creative Agency</a> from <a href=\\\"https://www.flaticon.com/\\\" title=\\\"Flaticon\\\">www.flaticon.com</a></div> -->\\n\", styles: [\".box{position:relative;background:rgba(255,255,255,.25);border:1px solid rgba(255,255,255,.2);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;min-height:20rem;min-width:20rem;transition:all 50ms ease}.box:active{box-shadow:0 .4rem 2rem #0000005e}.box .header{border-radius:.7rem .7rem 0 0;background:#fff;color:#000;font-size:2rem;display:grid;grid-template-columns:20fr 80fr;padding:.5rem 1rem}.box .header img{width:3rem;height:3rem}.box .robot-status{width:inherit;display:flex;justify-content:center;flex-direction:column;align-items:center;grid-gap:1rem;gap:1rem;margin-top:1rem}.box .robot-status .cleaning-button{padding:1rem;background:#33dbc6;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box .robot-status .cleaning-button:active{background:#34e0a0}.box .robot-status .stop-cleaning-button{padding:1rem;background:#d91313;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box .robot-status .stop-cleaning-button:active{background:#ea1313}.box .robot-status .battery{display:flex;align-items:center;flex-direction:row;grid-gap:1rem;gap:1rem}.box .robot-status .battery .gg-battery{box-sizing:border-box;position:relative;display:block;width:2rem;height:.9rem;transform:scale(var(--ggs, 1));border:2px solid;border-radius:3px;margin-left:-3px}.box .robot-status .battery .gg-battery:after,.box .robot-status .battery .gg-battery:before{content:\\\"\\\";display:block;box-sizing:border-box;position:absolute;height:.5rem;background:currentColor;top:1px}.box .robot-status .battery .gg-battery:before{right:-4px;border-radius:3px;width:4px}.box .robot-status .battery .gg-battery:after{width:1.6rem;left:1px}\\n\"] }]\n    }], function () { return [{ type: CleaningService }, { type: i2$1.NgxSpinnerService }]; }, null); })();\n\nconst _c0 = [\"ipInput\"];\nclass CleaningSetupComponent {\n    constructor(cleaningService, toastMessage) {\n        this.cleaningService = cleaningService;\n        this.toastMessage = toastMessage;\n        this.isActivated = false;\n        this.validIp = 'disconnected';\n        this.cleaningService.isActivated$.subscribe((res) => {\n            this.isActivated = res;\n        });\n        this.cleaningService.serverUrl$.subscribe((res) => {\n            this.ipInput.nativeElement.value = res ? res : '';\n            this.validIp = res ? 'connected' : 'disconnected';\n        });\n    }\n    ngOnInit() { }\n    setChecked($event) {\n        const input = $event.target;\n        this.cleaningService.saveActivated(input.checked).subscribe(() => {\n            this.toastMessage.success('iRobot Server Einstellungen sind gespeichert', {\n                style: {\n                    background: 'rgba(255, 255, 255, 0.8)',\n                },\n                dismissible: true,\n                ariaLive: 'polite',\n                id: 'hue-saved',\n            });\n        });\n    }\n    checkIP() {\n        const input = this.ipInput.nativeElement.value;\n        if (input.length > 1) {\n            this.validIp = 'loading';\n            // Have we already fired it? Then let it run out..\n            if (this.checkingSubscription) {\n                this.checkingSubscription.unsubscribe();\n            }\n            this.checkingSubscription = this.cleaningService\n                .checkiRobotServer(input)\n                .pipe(debounceTime(750), distinctUntilChanged(), take(1))\n                .subscribe((res) => {\n                res.status === 200\n                    ? this.setiRobotValidIp(input)\n                    : this.showErrorMessage();\n            }, (err) => this.showErrorMessage());\n        }\n    }\n    showErrorMessage() {\n        this.validIp = 'disconnected';\n    }\n    setiRobotValidIp(input) {\n        this.checkingSubscription.unsubscribe();\n        this.validIp = 'connected';\n        this.cleaningService.saveiRobotIp(input).subscribe(() => {\n            this.ipInput.nativeElement.value = input;\n            this.toastMessage.success('iRobot Server Einstellungen sind gespeichert', {\n                style: {\n                    background: 'rgba(255, 255, 255, 0.8)',\n                },\n                dismissible: true,\n                ariaLive: 'polite',\n                id: 'hue-saved',\n            });\n        });\n    }\n}\nCleaningSetupComponent.ɵfac = function CleaningSetupComponent_Factory(t) { return new (t || CleaningSetupComponent)(i0.ɵɵdirectiveInject(CleaningService), i0.ɵɵdirectiveInject(i3.HotToastService)); };\nCleaningSetupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CleaningSetupComponent, selectors: [[\"yah-cleaning-setup\"]], viewQuery: function CleaningSetupComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ipInput = _t.first);\n    } }, decls: 16, vars: 4, consts: [[\"src\", \"assets/cleaner.svg\", \"width\", \"32\"], [1, \"no-margin\"], [1, \"switch\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"slider\"], [1, \"input-row\"], [\"type\", \"text\", 1, \"input-frosted\", 3, \"input\"], [\"ipInput\", \"\"]], template: function CleaningSetupComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\");\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵelement(2, \"img\", 0);\n        i0.ɵɵtext(3, \" iRobot Server Einstellungen \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 1);\n        i0.ɵɵtext(5, \" Aktiviert \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"label\", 2);\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"change\", function CleaningSetupComponent_Template_input_change_7_listener($event) { return ctx.setChecked($event); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"p\");\n        i0.ɵɵelementStart(10, \"p\", 1);\n        i0.ɵɵtext(11, \" IP \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelementStart(13, \"input\", 6, 7);\n        i0.ɵɵlistener(\"input\", function CleaningSetupComponent_Template_input_input_13_listener() { return ctx.checkIP(); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"i\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"checked\", ctx.isActivated);\n        i0.ɵɵadvance(8);\n        i0.ɵɵclassMapInterpolate1(\"symbol \", ctx.validIp, \"\");\n    } }, styles: [\"form[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-direction:column}form[_ngcontent-%COMP%]   .no-margin[_ngcontent-%COMP%]{margin:0}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]{display:flex;align-items:center}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .input-frosted[_ngcontent-%COMP%]{color:#fff;font-size:1.4rem;font-weight:800;padding:1rem;border:none;background:rgba(255,255,255,.4);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;max-width:90%}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol[_ngcontent-%COMP%]{width:2rem;height:2rem;margin-left:.5rem}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.connected[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22iso-8859-1%22%3F%3E%0D%3C!-- Generator%3A Adobe Illustrator 19.0.0%2C SVG Export Plug-In . SVG Version%3A 6.00 Build 0)  --%3E%0D%3Csvg version%3D%221.1%22 id%3D%22Layer_1%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 x%3D%220px%22 y%3D%220px%22%0D%09 viewBox%3D%220 0 511.999 511.999%22 style%3D%22enable-background%3Anew 0 0 511.999 511.999%3B%22 xml%3Aspace%3D%22preserve%22%3E%0D%3Cpath style%3D%22fill%3A%23B7E183%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L163.89%2C370.299L53.284%2C259.693%0D%09c-12.201-12.204-31.952-12.205-44.154-0.001c-12.173%2C12.174-12.173%2C31.981%2C0%2C44.153L141.814%2C436.53%0D%09c12.199%2C12.198%2C31.953%2C12.2%2C44.153%2C0L502.87%2C119.626C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cpath style%3D%22fill%3A%2371DE56%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L243.511%2C290.678v88.306L502.87%2C119.626%0D%09C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3C%2Fsvg%3E%0D\\\") no-repeat}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.disconnected[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3Csvg height%3D%22100%25%22 viewBox%3D%220 0 329.26933 329%22 width%3D%2220%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg fill%3D%22%23f44336%22%3E%3Cpath d%3D%22m21.339844 329.398438c-5.460938 0-10.925782-2.089844-15.082032-6.25-8.34375-8.339844-8.34375-21.824219 0-30.164063l286.589844-286.59375c8.339844-8.339844 21.824219-8.339844 30.164063 0 8.34375 8.339844 8.34375 21.824219 0 30.164063l-286.589844 286.59375c-4.183594 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3Cpath d%3D%22m307.929688 329.398438c-5.460938 0-10.921876-2.089844-15.082032-6.25l-286.589844-286.59375c-8.34375-8.339844-8.34375-21.824219 0-30.164063 8.339844-8.339844 21.820313-8.339844 30.164063 0l286.589844 286.59375c8.34375 8.339844 8.34375 21.824219 0 30.164063-4.160157 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\") center no-repeat}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.loading[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22 standalone%3D%22no%22%3F%3E%3Csvg xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.0%22 width%3D%22100pt%22 height%3D%22100pt%22 viewBox%3D%220 0 128 128%22 xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23000%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23f8f8f8%22 transform%3D%22rotate(30 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23e8e8e8%22 transform%3D%22rotate(60 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23d4d4d4%22 transform%3D%22rotate(90 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23bebebe%22 transform%3D%22rotate(120 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23a6a6a6%22 transform%3D%22rotate(150 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%238e8e8e%22 transform%3D%22rotate(180 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23737373%22 transform%3D%22rotate(210 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%235a5a5a%22 transform%3D%22rotate(240 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23414141%22 transform%3D%22rotate(270 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%232a2a2a%22 transform%3D%22rotate(300 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23151515%22 transform%3D%22rotate(330 64 64)%22%2F%3E%3CanimateTransform attributeName%3D%22transform%22 type%3D%22rotate%22 values%3D%220 64 64%3B30 64 64%3B60 64 64%3B90 64 64%3B120 64 64%3B150 64 64%3B180 64 64%3B210 64 64%3B240 64 64%3B270 64 64%3B300 64 64%3B330 64 64%22 calcMode%3D%22discrete%22 dur%3D%22240ms%22 repeatCount%3D%22indefinite%22%3E%3C%2FanimateTransform%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");background-size:contain}.switch[_ngcontent-%COMP%]{position:relative;display:inline-block;width:60px;height:34px}.switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{opacity:0;width:0;height:0}.slider[_ngcontent-%COMP%]{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.slider[_ngcontent-%COMP%]:before{position:absolute;content:\\\"\\\";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]{background-color:#2196f3}input[_ngcontent-%COMP%]:focus + .slider[_ngcontent-%COMP%]{box-shadow:0 0 1px #2196f3}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]:before{transform:translate(26px)}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningSetupComponent, [{\n        type: Component,\n        args: [{ selector: 'yah-cleaning-setup', template: \"<form>\\n\\n  <h2> <img src=\\\"assets/cleaner.svg\\\" width=\\\"32\\\"> iRobot Server Einstellungen </h2>\\n  <p class=\\\"no-margin\\\"> Aktiviert </p>\\n  <label class=\\\"switch\\\">\\n    <input type=\\\"checkbox\\\" (change)=\\\"setChecked($event)\\\" [checked]=\\\"isActivated\\\">\\n    <span class=\\\"slider\\\"></span>\\n  </label>\\n\\n\\n  <p></p>\\n\\n  <p class=\\\"no-margin\\\"> IP </p>\\n  <div class=\\\"input-row\\\">\\n    <input #ipInput (input)='checkIP()' type=\\\"text\\\" class=\\\"input-frosted\\\">\\n    <i class=\\\"symbol {{validIp}}\\\" ></i>\\n  </div>\\n</form>\\n\\n\\n<!-- <div>Icons made by <a href=\\\"https://www.flaticon.com/authors/pixel-perfect\\\" title=\\\"Pixel perfect\\\">Pixel perfect</a> from <a href=\\\"https://www.flaticon.com/\\\" title=\\\"Flaticon\\\">www.flaticon.com</a></div> -->\\n\", styles: [\"form{display:flex;justify-content:center;flex-direction:column}form .no-margin{margin:0}form .input-row{display:flex;align-items:center}form .input-row .input-frosted{color:#fff;font-size:1.4rem;font-weight:800;padding:1rem;border:none;background:rgba(255,255,255,.4);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;max-width:90%}form .input-row .symbol{width:2rem;height:2rem;margin-left:.5rem}form .input-row .symbol.connected{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22iso-8859-1%22%3F%3E%0D%3C!-- Generator%3A Adobe Illustrator 19.0.0%2C SVG Export Plug-In . SVG Version%3A 6.00 Build 0)  --%3E%0D%3Csvg version%3D%221.1%22 id%3D%22Layer_1%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 x%3D%220px%22 y%3D%220px%22%0D%09 viewBox%3D%220 0 511.999 511.999%22 style%3D%22enable-background%3Anew 0 0 511.999 511.999%3B%22 xml%3Aspace%3D%22preserve%22%3E%0D%3Cpath style%3D%22fill%3A%23B7E183%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L163.89%2C370.299L53.284%2C259.693%0D%09c-12.201-12.204-31.952-12.205-44.154-0.001c-12.173%2C12.174-12.173%2C31.981%2C0%2C44.153L141.814%2C436.53%0D%09c12.199%2C12.198%2C31.953%2C12.2%2C44.153%2C0L502.87%2C119.626C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cpath style%3D%22fill%3A%2371DE56%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L243.511%2C290.678v88.306L502.87%2C119.626%0D%09C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3C%2Fsvg%3E%0D\\\") no-repeat}form .input-row .symbol.disconnected{background:url(\\\"data:image/svg+xml,%3Csvg height%3D%22100%25%22 viewBox%3D%220 0 329.26933 329%22 width%3D%2220%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg fill%3D%22%23f44336%22%3E%3Cpath d%3D%22m21.339844 329.398438c-5.460938 0-10.925782-2.089844-15.082032-6.25-8.34375-8.339844-8.34375-21.824219 0-30.164063l286.589844-286.59375c8.339844-8.339844 21.824219-8.339844 30.164063 0 8.34375 8.339844 8.34375 21.824219 0 30.164063l-286.589844 286.59375c-4.183594 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3Cpath d%3D%22m307.929688 329.398438c-5.460938 0-10.921876-2.089844-15.082032-6.25l-286.589844-286.59375c-8.34375-8.339844-8.34375-21.824219 0-30.164063 8.339844-8.339844 21.820313-8.339844 30.164063 0l286.589844 286.59375c8.34375 8.339844 8.34375 21.824219 0 30.164063-4.160157 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\") center no-repeat}form .input-row .symbol.loading{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22 standalone%3D%22no%22%3F%3E%3Csvg xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.0%22 width%3D%22100pt%22 height%3D%22100pt%22 viewBox%3D%220 0 128 128%22 xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23000%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23f8f8f8%22 transform%3D%22rotate(30 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23e8e8e8%22 transform%3D%22rotate(60 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23d4d4d4%22 transform%3D%22rotate(90 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23bebebe%22 transform%3D%22rotate(120 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23a6a6a6%22 transform%3D%22rotate(150 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%238e8e8e%22 transform%3D%22rotate(180 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23737373%22 transform%3D%22rotate(210 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%235a5a5a%22 transform%3D%22rotate(240 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23414141%22 transform%3D%22rotate(270 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%232a2a2a%22 transform%3D%22rotate(300 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23151515%22 transform%3D%22rotate(330 64 64)%22%2F%3E%3CanimateTransform attributeName%3D%22transform%22 type%3D%22rotate%22 values%3D%220 64 64%3B30 64 64%3B60 64 64%3B90 64 64%3B120 64 64%3B150 64 64%3B180 64 64%3B210 64 64%3B240 64 64%3B270 64 64%3B300 64 64%3B330 64 64%22 calcMode%3D%22discrete%22 dur%3D%22240ms%22 repeatCount%3D%22indefinite%22%3E%3C%2FanimateTransform%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");background-size:contain}.switch{position:relative;display:inline-block;width:60px;height:34px}.switch input{opacity:0;width:0;height:0}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.slider:before{position:absolute;content:\\\"\\\";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input:checked+.slider{background-color:#2196f3}input:focus+.slider{box-shadow:0 0 1px #2196f3}input:checked+.slider:before{transform:translate(26px)}\\n\"] }]\n    }], function () { return [{ type: CleaningService }, { type: i3.HotToastService }]; }, { ipInput: [{\n            type: ViewChild,\n            args: ['ipInput', { static: true }]\n        }] }); })();\n\nclass CleaningModule {\n}\nCleaningModule.ɵfac = function CleaningModule_Factory(t) { return new (t || CleaningModule)(); };\nCleaningModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CleaningModule });\nCleaningModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            NgxSpinnerModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CleaningButtonComponent, CleaningSetupComponent],\n                imports: [\n                    CommonModule,\n                    NgxSpinnerModule\n                ],\n                exports: [CleaningButtonComponent, CleaningSetupComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CleaningModule, { declarations: [CleaningButtonComponent, CleaningSetupComponent], imports: [CommonModule,\n        NgxSpinnerModule], exports: [CleaningButtonComponent, CleaningSetupComponent] }); })();\n\n/*\n * Public API Surface of yah-cleaning\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CleaningButtonComponent, CleaningModule, CleaningService, CleaningSetupComponent };\n","map":{"version":3,"file":"yah-cleaning.mjs","sources":["../../../projects/yah-cleaning/src/lib/services/cleaning.service.ts","../../../projects/yah-cleaning/src/lib/components/cleaning-button/cleaning-button.component.html","../../../projects/yah-cleaning/src/lib/components/cleaning-button/cleaning-button.component.ts","../../../projects/yah-cleaning/src/lib/components/cleaning-setup/cleaning-setup.component.ts","../../../projects/yah-cleaning/src/lib/components/cleaning-setup/cleaning-setup.component.html","../../../projects/yah-cleaning/src/lib/cleaning.module.ts","../../../projects/yah-cleaning/src/projects.ts","../../../projects/yah-cleaning/src/yah-cleaning.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  combineLatest,\n  concat,\n  empty,\n  EMPTY,\n  iif,\n  NEVER,\n  Observable,\n  of,\n} from 'rxjs';\nimport { HttpClient, HttpEvent, HttpResponse } from '@angular/common/http';\nimport {\n  delay,\n  filter,\n  map,\n  repeat,\n  switchMap,\n  tap,\n  timeout,\n  timestamp,\n} from 'rxjs/operators';\nimport { CleaningStatus } from '../types/cleaning-status';\nimport { StorageMap } from '@ngx-pwa/local-storage';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CleaningService {\n  public isActivated$: Observable<boolean>;\n  public serverUrl$: Observable<string | undefined>;\n  public status$: Observable<CleaningStatus>;\n\n  private iRobotURL;\n\n  private readonly IROBOT_IS_ACTIVATED_KEY = 'IROBOT_IS_ACTIVATED';\n  private readonly IROBOT_SERVER_URL_KEY = 'IROBOT_SERVER_URL';\n\n  constructor(\n    private http: HttpClient,\n    private localDb: StorageMap,\n    private toastMessage: HotToastService,\n    private router: Router\n  ) {\n    this.isActivated$ = this.localDb.get(this.IROBOT_IS_ACTIVATED_KEY, {\n      type: 'boolean',\n    });\n\n    this.serverUrl$ = combineLatest([\n      localDb.watch(this.IROBOT_SERVER_URL_KEY, { type: 'string' }),\n      this.isActivated$,\n    ]).pipe(\n      map(([res, isActivated]) => {\n        if (!isActivated) {\n          return;\n        }\n\n        if (isActivated === undefined || res === undefined) {\n          this.toastMessage.warning('Lass uns uns sachen erstmal einstellen ', {\n            style: {\n              background: 'rgba(255, 255, 255, 0.8)',\n            },\n            dismissible: true,\n            ariaLive: 'polite',\n          });\n          this.router.navigate(['setup']).then();\n          return;\n        }\n        return res;\n      }),\n      tap((res) => (this.iRobotURL = res))\n    );\n\n    this.status$ = this.serverUrl$.pipe(\n      filter((serverUrl) => !!serverUrl),\n      switchMap((serverUrl) => {\n        return this.http\n          .get<CleaningStatus>(`http://${serverUrl}/api/local/info/mission`)\n      })\n    );\n  }\n\n  public checkiRobotServer(ip: string): Observable<HttpResponse<any>> {\n    let formattedIp = ip.replace('http://', '');\n    formattedIp = formattedIp.replace('/api/local/info/mission', '');\n    formattedIp = formattedIp.replace('/', '');\n    return this.http\n      .get<HttpResponse<any>>(`http://${formattedIp}/api/local/info/mission`, {\n        observe: 'response',\n      })\n      .pipe(timeout(3000));\n  }\n\n  public startRobot(): Observable<boolean> {\n    return this.http\n      .get(`http://${this.iRobotURL}/api/local/action/start`, { observe: 'response' })\n      .pipe(map((response) => !!response.status));\n  }\n\n  public stopRobot(): Observable<boolean> {\n    return this.http\n      .get(`http://${this.iRobotURL}/api/local/action/stop`, { observe: 'response' })\n      .pipe(map((response) => !!response.status));\n  }\n\n  public saveiRobotIp(input: string): Observable<null> {\n    return this.localDb.set(this.IROBOT_SERVER_URL_KEY, input, {\n      type: 'string',\n    });\n  }\n\n  public saveActivated(isActivated: boolean): Observable<null> {\n    return this.localDb.set(this.IROBOT_IS_ACTIVATED_KEY, isActivated, {\n      type: 'boolean',\n    });\n  }\n}\n","<div class=\"box\">\n  <div class=\"header\"><img src=\"./assets/cleaner.svg\" /> iRobot </div>\n\n  <ngx-spinner\n    name=\"cleaning-connection-spinner\"\n    bdColor=\"rgba(0,0,0,0)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"square-loader\"\n    [fullScreen]=\"false\"\n    ></ngx-spinner\n  >\n\n  <div class=\"robot-status\" *ngIf=\"robotAvailable\">\n    {{ robotStatus }}\n    <div class=\"battery\">\n      <span class=\"gg-battery\"></span>\n      <span> {{ robotBattery }} %</span>\n    </div>\n    <div class=\"cleaning-button\" (click)=\"startRobot()\">Start</div>\n    <div class=\"stop-cleaning-button\" (click)=\"stopRobot()\">Stop</div>\n  </div>\n</div>\n\n<!-- <div>Icons made by <a href=\"https://www.flaticon.com/authors/creaticca-creative-agency\" title=\"Creaticca Creative Agency\">Creaticca Creative Agency</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { CleaningService } from '../../services/cleaning.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'yah-cleaning-button',\n  templateUrl: './cleaning-button.component.html',\n  styleUrls: ['./cleaning-button.component.scss'],\n})\nexport class CleaningButtonComponent implements OnInit {\n  robotAvailable = false;\n  robotBattery = 0;\n  private SPINNER_NAME = 'cleaning-connection-spinner';\n  robotStatus = '';\n\n  constructor(\n    private cleaningService: CleaningService,\n    private ngxSpinnerService: NgxSpinnerService\n  ) {\n    this.ngxSpinnerService.show(this.SPINNER_NAME);\n    this.cleaningService.status$.subscribe((status) => {\n      this.ngxSpinnerService.hide(this.SPINNER_NAME);\n      this.robotStatus = 'Robot verfügbar';\n      this.robotAvailable = !!status.cleanMissionStatus.phase;\n      this.robotBattery = status.batPct;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  startRobot(): void {\n    this.cleaningService\n      .startRobot()\n      .pipe(take(1))\n      .subscribe((succesful) => {\n        if (succesful === true) {\n          this.robotStatus = 'Unterwegs Putzen';\n        }\n      });\n  }\n\n  stopRobot(): void {\n    this.cleaningService.stopRobot().pipe(take(1)).subscribe((succesful) => {\n      if (succesful === true) {\n        this.robotStatus = 'Robot verfügbar';\n      }\n    });\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { debounceTime, distinctUntilChanged, take } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { CleaningService } from '../../services/cleaning.service';\nimport { HotToastService } from '@ngneat/hot-toast';\n\n@Component({\n  selector: 'yah-cleaning-setup',\n  templateUrl: './cleaning-setup.component.html',\n  styleUrls: ['./cleaning-setup.component.scss'],\n})\nexport class CleaningSetupComponent implements OnInit {\n  @ViewChild('ipInput', { static: true }) ipInput: ElementRef<HTMLInputElement>;\n\n  isActivated = false;\n  validIp = 'disconnected';\n  checkingSubscription: Subscription;\n\n  constructor(\n    private cleaningService: CleaningService,\n    private toastMessage: HotToastService\n  ) {\n    this.cleaningService.isActivated$.subscribe((res) => {\n      this.isActivated = res;\n    });\n\n    this.cleaningService.serverUrl$.subscribe((res) => {\n      this.ipInput.nativeElement.value = res ? res : '';\n      this.validIp = res ? 'connected' : 'disconnected';\n    });\n  }\n\n  ngOnInit(): void {}\n\n  setChecked($event: Event): void {\n    const input = $event.target as HTMLInputElement;\n    this.cleaningService.saveActivated(input.checked).subscribe(() => {\n      this.toastMessage.success(\n        'iRobot Server Einstellungen sind gespeichert',\n        {\n          style: {\n            background: 'rgba(255, 255, 255, 0.8)',\n          },\n          dismissible: true,\n          ariaLive: 'polite',\n          id: 'hue-saved',\n        }\n      );\n    });\n  }\n\n  checkIP(): void {\n    const input = this.ipInput.nativeElement.value;\n\n    if (input.length > 1) {\n      this.validIp = 'loading';\n\n      // Have we already fired it? Then let it run out..\n      if (this.checkingSubscription) {\n        this.checkingSubscription.unsubscribe();\n      }\n      this.checkingSubscription = this.cleaningService\n        .checkiRobotServer(input)\n        .pipe(debounceTime(750), distinctUntilChanged(), take(1))\n        .subscribe(\n          (res) => {\n            res.status === 200\n              ? this.setiRobotValidIp(input)\n              : this.showErrorMessage();\n          },\n          (err) => this.showErrorMessage()\n        );\n    }\n  }\n\n  showErrorMessage(): void {\n    this.validIp = 'disconnected';\n  }\n\n  setiRobotValidIp(input: string): void {\n    this.checkingSubscription.unsubscribe();\n    this.validIp = 'connected';\n    this.cleaningService.saveiRobotIp(input).subscribe(() => {\n      this.ipInput.nativeElement.value = input;\n      this.toastMessage.success(\n        'iRobot Server Einstellungen sind gespeichert',\n        {\n          style: {\n            background: 'rgba(255, 255, 255, 0.8)',\n          },\n          dismissible: true,\n          ariaLive: 'polite',\n          id: 'hue-saved',\n        }\n      );\n    });\n  }\n}\n","<form>\n\n  <h2> <img src=\"assets/cleaner.svg\" width=\"32\"> iRobot Server Einstellungen </h2>\n  <p class=\"no-margin\"> Aktiviert </p>\n  <label class=\"switch\">\n    <input type=\"checkbox\" (change)=\"setChecked($event)\" [checked]=\"isActivated\">\n    <span class=\"slider\"></span>\n  </label>\n\n\n  <p></p>\n\n  <p class=\"no-margin\"> IP </p>\n  <div class=\"input-row\">\n    <input #ipInput (input)='checkIP()' type=\"text\" class=\"input-frosted\">\n    <i class=\"symbol {{validIp}}\" ></i>\n  </div>\n</form>\n\n\n<!-- <div>Icons made by <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> -->\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CleaningButtonComponent} from './components/cleaning-button/cleaning-button.component';\nimport {CleaningSetupComponent} from './components/cleaning-setup/cleaning-setup.component';\nimport {NgxSpinnerModule} from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [CleaningButtonComponent, CleaningSetupComponent],\n  imports: [\n    CommonModule,\n    NgxSpinnerModule\n  ],\n  exports: [CleaningButtonComponent, CleaningSetupComponent]\n})\nexport class CleaningModule { }\n","/*\n * Public API Surface of yah-cleaning\n */\n\nexport * from './lib/cleaning.module';\nexport * from './lib/components/cleaning-button/cleaning-button.component';\nexport * from './lib/components/cleaning-setup/cleaning-setup.component';\nexport * from './lib/types/cleaning-status';\nexport * from './lib/services/cleaning.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './projects';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewChild, NgModule } from '@angular/core';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { map, tap, filter, switchMap, timeout, take, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\nimport * as i1 from '@angular/common/http';\nimport * as i2 from '@ngx-pwa/local-storage';\nimport * as i3 from '@ngneat/hot-toast';\nimport * as i4 from '@angular/router';\nimport * as i2$1 from 'ngx-spinner';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nclass CleaningService {\n    constructor(http, localDb, toastMessage, router) {\n        this.http = http;\n        this.localDb = localDb;\n        this.toastMessage = toastMessage;\n        this.router = router;\n        this.IROBOT_IS_ACTIVATED_KEY = 'IROBOT_IS_ACTIVATED';\n        this.IROBOT_SERVER_URL_KEY = 'IROBOT_SERVER_URL';\n        this.isActivated$ = this.localDb.get(this.IROBOT_IS_ACTIVATED_KEY, {\n            type: 'boolean',\n        });\n        this.serverUrl$ = combineLatest([\n            localDb.watch(this.IROBOT_SERVER_URL_KEY, { type: 'string' }),\n            this.isActivated$,\n        ]).pipe(map(([res, isActivated]) => {\n            if (!isActivated) {\n                return;\n            }\n            if (isActivated === undefined || res === undefined) {\n                this.toastMessage.warning('Lass uns uns sachen erstmal einstellen ', {\n                    style: {\n                        background: 'rgba(255, 255, 255, 0.8)',\n                    },\n                    dismissible: true,\n                    ariaLive: 'polite',\n                });\n                this.router.navigate(['setup']).then();\n                return;\n            }\n            return res;\n        }), tap((res) => (this.iRobotURL = res)));\n        this.status$ = this.serverUrl$.pipe(filter((serverUrl) => !!serverUrl), switchMap((serverUrl) => {\n            return this.http\n                .get(`http://${serverUrl}/api/local/info/mission`);\n        }));\n    }\n    checkiRobotServer(ip) {\n        let formattedIp = ip.replace('http://', '');\n        formattedIp = formattedIp.replace('/api/local/info/mission', '');\n        formattedIp = formattedIp.replace('/', '');\n        return this.http\n            .get(`http://${formattedIp}/api/local/info/mission`, {\n            observe: 'response',\n        })\n            .pipe(timeout(3000));\n    }\n    startRobot() {\n        return this.http\n            .get(`http://${this.iRobotURL}/api/local/action/start`, { observe: 'response' })\n            .pipe(map((response) => !!response.status));\n    }\n    stopRobot() {\n        return this.http\n            .get(`http://${this.iRobotURL}/api/local/action/stop`, { observe: 'response' })\n            .pipe(map((response) => !!response.status));\n    }\n    saveiRobotIp(input) {\n        return this.localDb.set(this.IROBOT_SERVER_URL_KEY, input, {\n            type: 'string',\n        });\n    }\n    saveActivated(isActivated) {\n        return this.localDb.set(this.IROBOT_IS_ACTIVATED_KEY, isActivated, {\n            type: 'boolean',\n        });\n    }\n}\nCleaningService.ɵfac = function CleaningService_Factory(t) { return new (t || CleaningService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StorageMap), i0.ɵɵinject(i3.HotToastService), i0.ɵɵinject(i4.Router)); };\nCleaningService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CleaningService, factory: CleaningService.ɵfac, providedIn: 'root' });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningService, [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], function () { return [{ type: i1.HttpClient }, { type: i2.StorageMap }, { type: i3.HotToastService }, { type: i4.Router }]; }, null);\n})();\n\nfunction CleaningButtonComponent_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 5);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementStart(2, \"div\", 6);\n        i0.ɵɵelement(3, \"span\", 7);\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 8);\n        i0.ɵɵlistener(\"click\", function CleaningButtonComponent_div_5_Template_div_click_6_listener() { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.startRobot(); });\n        i0.ɵɵtext(7, \"Start\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 9);\n        i0.ɵɵlistener(\"click\", function CleaningButtonComponent_div_5_Template_div_click_8_listener() { i0.ɵɵrestoreView(_r2); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.stopRobot(); });\n        i0.ɵɵtext(9, \"Stop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r0.robotStatus, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r0.robotBattery, \" %\");\n    }\n}\nclass CleaningButtonComponent {\n    constructor(cleaningService, ngxSpinnerService) {\n        this.cleaningService = cleaningService;\n        this.ngxSpinnerService = ngxSpinnerService;\n        this.robotAvailable = false;\n        this.robotBattery = 0;\n        this.SPINNER_NAME = 'cleaning-connection-spinner';\n        this.robotStatus = '';\n        this.ngxSpinnerService.show(this.SPINNER_NAME);\n        this.cleaningService.status$.subscribe((status) => {\n            this.ngxSpinnerService.hide(this.SPINNER_NAME);\n            this.robotStatus = 'Robot verfügbar';\n            this.robotAvailable = !!status.cleanMissionStatus.phase;\n            this.robotBattery = status.batPct;\n        });\n    }\n    ngOnInit() { }\n    startRobot() {\n        this.cleaningService\n            .startRobot()\n            .pipe(take(1))\n            .subscribe((succesful) => {\n            if (succesful === true) {\n                this.robotStatus = 'Unterwegs Putzen';\n            }\n        });\n    }\n    stopRobot() {\n        this.cleaningService.stopRobot().pipe(take(1)).subscribe((succesful) => {\n            if (succesful === true) {\n                this.robotStatus = 'Robot verfügbar';\n            }\n        });\n    }\n}\nCleaningButtonComponent.ɵfac = function CleaningButtonComponent_Factory(t) { return new (t || CleaningButtonComponent)(i0.ɵɵdirectiveInject(CleaningService), i0.ɵɵdirectiveInject(i2$1.NgxSpinnerService)); };\nCleaningButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CleaningButtonComponent, selectors: [[\"yah-cleaning-button\"]], decls: 6, vars: 2, consts: [[1, \"box\"], [1, \"header\"], [\"src\", \"./assets/cleaner.svg\"], [\"name\", \"cleaning-connection-spinner\", \"bdColor\", \"rgba(0,0,0,0)\", \"size\", \"medium\", \"color\", \"#fff\", \"type\", \"square-loader\", 3, \"fullScreen\"], [\"class\", \"robot-status\", 4, \"ngIf\"], [1, \"robot-status\"], [1, \"battery\"], [1, \"gg-battery\"], [1, \"cleaning-button\", 3, \"click\"], [1, \"stop-cleaning-button\", 3, \"click\"]], template: function CleaningButtonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵelement(2, \"img\", 2);\n            i0.ɵɵtext(3, \" iRobot \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(4, \"ngx-spinner\", 3);\n            i0.ɵɵtemplate(5, CleaningButtonComponent_div_5_Template, 10, 2, \"div\", 4);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"fullScreen\", false);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.robotAvailable);\n        }\n    }, directives: [i2$1.NgxSpinnerComponent, i3$1.NgIf], styles: [\".box[_ngcontent-%COMP%]{position:relative;background:rgba(255,255,255,.25);border:1px solid rgba(255,255,255,.2);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;min-height:20rem;min-width:20rem;transition:all 50ms ease}.box[_ngcontent-%COMP%]:active{box-shadow:0 .4rem 2rem #0000005e}.box[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{border-radius:.7rem .7rem 0 0;background:#fff;color:#000;font-size:2rem;display:grid;grid-template-columns:20fr 80fr;padding:.5rem 1rem}.box[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:3rem;height:3rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]{width:inherit;display:flex;justify-content:center;flex-direction:column;align-items:center;grid-gap:1rem;gap:1rem;margin-top:1rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .cleaning-button[_ngcontent-%COMP%]{padding:1rem;background:#33dbc6;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .cleaning-button[_ngcontent-%COMP%]:active{background:#34e0a0}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .stop-cleaning-button[_ngcontent-%COMP%]{padding:1rem;background:#d91313;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .stop-cleaning-button[_ngcontent-%COMP%]:active{background:#ea1313}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]{display:flex;align-items:center;flex-direction:row;grid-gap:1rem;gap:1rem}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;display:block;width:2rem;height:.9rem;transform:scale(var(--ggs, 1));border:2px solid;border-radius:3px;margin-left:-3px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:after, .box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:before{content:\\\"\\\";display:block;box-sizing:border-box;position:absolute;height:.5rem;background:currentColor;top:1px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:before{right:-4px;border-radius:3px;width:4px}.box[_ngcontent-%COMP%]   .robot-status[_ngcontent-%COMP%]   .battery[_ngcontent-%COMP%]   .gg-battery[_ngcontent-%COMP%]:after{width:1.6rem;left:1px}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningButtonComponent, [{\n            type: Component,\n            args: [{ selector: 'yah-cleaning-button', template: \"<div class=\\\"box\\\">\\n  <div class=\\\"header\\\"><img src=\\\"./assets/cleaner.svg\\\" /> iRobot </div>\\n\\n  <ngx-spinner\\n    name=\\\"cleaning-connection-spinner\\\"\\n    bdColor=\\\"rgba(0,0,0,0)\\\"\\n    size=\\\"medium\\\"\\n    color=\\\"#fff\\\"\\n    type=\\\"square-loader\\\"\\n    [fullScreen]=\\\"false\\\"\\n    ></ngx-spinner\\n  >\\n\\n  <div class=\\\"robot-status\\\" *ngIf=\\\"robotAvailable\\\">\\n    {{ robotStatus }}\\n    <div class=\\\"battery\\\">\\n      <span class=\\\"gg-battery\\\"></span>\\n      <span> {{ robotBattery }} %</span>\\n    </div>\\n    <div class=\\\"cleaning-button\\\" (click)=\\\"startRobot()\\\">Start</div>\\n    <div class=\\\"stop-cleaning-button\\\" (click)=\\\"stopRobot()\\\">Stop</div>\\n  </div>\\n</div>\\n\\n<!-- <div>Icons made by <a href=\\\"https://www.flaticon.com/authors/creaticca-creative-agency\\\" title=\\\"Creaticca Creative Agency\\\">Creaticca Creative Agency</a> from <a href=\\\"https://www.flaticon.com/\\\" title=\\\"Flaticon\\\">www.flaticon.com</a></div> -->\\n\", styles: [\".box{position:relative;background:rgba(255,255,255,.25);border:1px solid rgba(255,255,255,.2);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;min-height:20rem;min-width:20rem;transition:all 50ms ease}.box:active{box-shadow:0 .4rem 2rem #0000005e}.box .header{border-radius:.7rem .7rem 0 0;background:#fff;color:#000;font-size:2rem;display:grid;grid-template-columns:20fr 80fr;padding:.5rem 1rem}.box .header img{width:3rem;height:3rem}.box .robot-status{width:inherit;display:flex;justify-content:center;flex-direction:column;align-items:center;grid-gap:1rem;gap:1rem;margin-top:1rem}.box .robot-status .cleaning-button{padding:1rem;background:#33dbc6;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box .robot-status .cleaning-button:active{background:#34e0a0}.box .robot-status .stop-cleaning-button{padding:1rem;background:#d91313;border-radius:.7rem;box-shadow:0 .4rem 2rem #1f26875e;transition:all 50ms ease}.box .robot-status .stop-cleaning-button:active{background:#ea1313}.box .robot-status .battery{display:flex;align-items:center;flex-direction:row;grid-gap:1rem;gap:1rem}.box .robot-status .battery .gg-battery{box-sizing:border-box;position:relative;display:block;width:2rem;height:.9rem;transform:scale(var(--ggs, 1));border:2px solid;border-radius:3px;margin-left:-3px}.box .robot-status .battery .gg-battery:after,.box .robot-status .battery .gg-battery:before{content:\\\"\\\";display:block;box-sizing:border-box;position:absolute;height:.5rem;background:currentColor;top:1px}.box .robot-status .battery .gg-battery:before{right:-4px;border-radius:3px;width:4px}.box .robot-status .battery .gg-battery:after{width:1.6rem;left:1px}\\n\"] }]\n        }], function () { return [{ type: CleaningService }, { type: i2$1.NgxSpinnerService }]; }, null);\n})();\n\nconst _c0 = [\"ipInput\"];\nclass CleaningSetupComponent {\n    constructor(cleaningService, toastMessage) {\n        this.cleaningService = cleaningService;\n        this.toastMessage = toastMessage;\n        this.isActivated = false;\n        this.validIp = 'disconnected';\n        this.cleaningService.isActivated$.subscribe((res) => {\n            this.isActivated = res;\n        });\n        this.cleaningService.serverUrl$.subscribe((res) => {\n            this.ipInput.nativeElement.value = res ? res : '';\n            this.validIp = res ? 'connected' : 'disconnected';\n        });\n    }\n    ngOnInit() { }\n    setChecked($event) {\n        const input = $event.target;\n        this.cleaningService.saveActivated(input.checked).subscribe(() => {\n            this.toastMessage.success('iRobot Server Einstellungen sind gespeichert', {\n                style: {\n                    background: 'rgba(255, 255, 255, 0.8)',\n                },\n                dismissible: true,\n                ariaLive: 'polite',\n                id: 'hue-saved',\n            });\n        });\n    }\n    checkIP() {\n        const input = this.ipInput.nativeElement.value;\n        if (input.length > 1) {\n            this.validIp = 'loading';\n            // Have we already fired it? Then let it run out..\n            if (this.checkingSubscription) {\n                this.checkingSubscription.unsubscribe();\n            }\n            this.checkingSubscription = this.cleaningService\n                .checkiRobotServer(input)\n                .pipe(debounceTime(750), distinctUntilChanged(), take(1))\n                .subscribe((res) => {\n                res.status === 200\n                    ? this.setiRobotValidIp(input)\n                    : this.showErrorMessage();\n            }, (err) => this.showErrorMessage());\n        }\n    }\n    showErrorMessage() {\n        this.validIp = 'disconnected';\n    }\n    setiRobotValidIp(input) {\n        this.checkingSubscription.unsubscribe();\n        this.validIp = 'connected';\n        this.cleaningService.saveiRobotIp(input).subscribe(() => {\n            this.ipInput.nativeElement.value = input;\n            this.toastMessage.success('iRobot Server Einstellungen sind gespeichert', {\n                style: {\n                    background: 'rgba(255, 255, 255, 0.8)',\n                },\n                dismissible: true,\n                ariaLive: 'polite',\n                id: 'hue-saved',\n            });\n        });\n    }\n}\nCleaningSetupComponent.ɵfac = function CleaningSetupComponent_Factory(t) { return new (t || CleaningSetupComponent)(i0.ɵɵdirectiveInject(CleaningService), i0.ɵɵdirectiveInject(i3.HotToastService)); };\nCleaningSetupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CleaningSetupComponent, selectors: [[\"yah-cleaning-setup\"]], viewQuery: function CleaningSetupComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ipInput = _t.first);\n        }\n    }, decls: 16, vars: 4, consts: [[\"src\", \"assets/cleaner.svg\", \"width\", \"32\"], [1, \"no-margin\"], [1, \"switch\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"slider\"], [1, \"input-row\"], [\"type\", \"text\", 1, \"input-frosted\", 3, \"input\"], [\"ipInput\", \"\"]], template: function CleaningSetupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\");\n            i0.ɵɵelementStart(1, \"h2\");\n            i0.ɵɵelement(2, \"img\", 0);\n            i0.ɵɵtext(3, \" iRobot Server Einstellungen \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"p\", 1);\n            i0.ɵɵtext(5, \" Aktiviert \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"label\", 2);\n            i0.ɵɵelementStart(7, \"input\", 3);\n            i0.ɵɵlistener(\"change\", function CleaningSetupComponent_Template_input_change_7_listener($event) { return ctx.setChecked($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"span\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(9, \"p\");\n            i0.ɵɵelementStart(10, \"p\", 1);\n            i0.ɵɵtext(11, \" IP \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 5);\n            i0.ɵɵelementStart(13, \"input\", 6, 7);\n            i0.ɵɵlistener(\"input\", function CleaningSetupComponent_Template_input_input_13_listener() { return ctx.checkIP(); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"i\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"checked\", ctx.isActivated);\n            i0.ɵɵadvance(8);\n            i0.ɵɵclassMapInterpolate1(\"symbol \", ctx.validIp, \"\");\n        }\n    }, styles: [\"form[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-direction:column}form[_ngcontent-%COMP%]   .no-margin[_ngcontent-%COMP%]{margin:0}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]{display:flex;align-items:center}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .input-frosted[_ngcontent-%COMP%]{color:#fff;font-size:1.4rem;font-weight:800;padding:1rem;border:none;background:rgba(255,255,255,.4);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;max-width:90%}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol[_ngcontent-%COMP%]{width:2rem;height:2rem;margin-left:.5rem}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.connected[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22iso-8859-1%22%3F%3E%0D%3C!-- Generator%3A Adobe Illustrator 19.0.0%2C SVG Export Plug-In . SVG Version%3A 6.00 Build 0)  --%3E%0D%3Csvg version%3D%221.1%22 id%3D%22Layer_1%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 x%3D%220px%22 y%3D%220px%22%0D%09 viewBox%3D%220 0 511.999 511.999%22 style%3D%22enable-background%3Anew 0 0 511.999 511.999%3B%22 xml%3Aspace%3D%22preserve%22%3E%0D%3Cpath style%3D%22fill%3A%23B7E183%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L163.89%2C370.299L53.284%2C259.693%0D%09c-12.201-12.204-31.952-12.205-44.154-0.001c-12.173%2C12.174-12.173%2C31.981%2C0%2C44.153L141.814%2C436.53%0D%09c12.199%2C12.198%2C31.953%2C12.2%2C44.153%2C0L502.87%2C119.626C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cpath style%3D%22fill%3A%2371DE56%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L243.511%2C290.678v88.306L502.87%2C119.626%0D%09C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3C%2Fsvg%3E%0D\\\") no-repeat}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.disconnected[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3Csvg height%3D%22100%25%22 viewBox%3D%220 0 329.26933 329%22 width%3D%2220%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg fill%3D%22%23f44336%22%3E%3Cpath d%3D%22m21.339844 329.398438c-5.460938 0-10.925782-2.089844-15.082032-6.25-8.34375-8.339844-8.34375-21.824219 0-30.164063l286.589844-286.59375c8.339844-8.339844 21.824219-8.339844 30.164063 0 8.34375 8.339844 8.34375 21.824219 0 30.164063l-286.589844 286.59375c-4.183594 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3Cpath d%3D%22m307.929688 329.398438c-5.460938 0-10.921876-2.089844-15.082032-6.25l-286.589844-286.59375c-8.34375-8.339844-8.34375-21.824219 0-30.164063 8.339844-8.339844 21.820313-8.339844 30.164063 0l286.589844 286.59375c8.34375 8.339844 8.34375 21.824219 0 30.164063-4.160157 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\") center no-repeat}form[_ngcontent-%COMP%]   .input-row[_ngcontent-%COMP%]   .symbol.loading[_ngcontent-%COMP%]{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22 standalone%3D%22no%22%3F%3E%3Csvg xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.0%22 width%3D%22100pt%22 height%3D%22100pt%22 viewBox%3D%220 0 128 128%22 xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23000%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23f8f8f8%22 transform%3D%22rotate(30 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23e8e8e8%22 transform%3D%22rotate(60 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23d4d4d4%22 transform%3D%22rotate(90 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23bebebe%22 transform%3D%22rotate(120 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23a6a6a6%22 transform%3D%22rotate(150 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%238e8e8e%22 transform%3D%22rotate(180 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23737373%22 transform%3D%22rotate(210 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%235a5a5a%22 transform%3D%22rotate(240 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23414141%22 transform%3D%22rotate(270 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%232a2a2a%22 transform%3D%22rotate(300 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23151515%22 transform%3D%22rotate(330 64 64)%22%2F%3E%3CanimateTransform attributeName%3D%22transform%22 type%3D%22rotate%22 values%3D%220 64 64%3B30 64 64%3B60 64 64%3B90 64 64%3B120 64 64%3B150 64 64%3B180 64 64%3B210 64 64%3B240 64 64%3B270 64 64%3B300 64 64%3B330 64 64%22 calcMode%3D%22discrete%22 dur%3D%22240ms%22 repeatCount%3D%22indefinite%22%3E%3C%2FanimateTransform%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");background-size:contain}.switch[_ngcontent-%COMP%]{position:relative;display:inline-block;width:60px;height:34px}.switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{opacity:0;width:0;height:0}.slider[_ngcontent-%COMP%]{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.slider[_ngcontent-%COMP%]:before{position:absolute;content:\\\"\\\";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]{background-color:#2196f3}input[_ngcontent-%COMP%]:focus + .slider[_ngcontent-%COMP%]{box-shadow:0 0 1px #2196f3}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]:before{transform:translate(26px)}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningSetupComponent, [{\n            type: Component,\n            args: [{ selector: 'yah-cleaning-setup', template: \"<form>\\n\\n  <h2> <img src=\\\"assets/cleaner.svg\\\" width=\\\"32\\\"> iRobot Server Einstellungen </h2>\\n  <p class=\\\"no-margin\\\"> Aktiviert </p>\\n  <label class=\\\"switch\\\">\\n    <input type=\\\"checkbox\\\" (change)=\\\"setChecked($event)\\\" [checked]=\\\"isActivated\\\">\\n    <span class=\\\"slider\\\"></span>\\n  </label>\\n\\n\\n  <p></p>\\n\\n  <p class=\\\"no-margin\\\"> IP </p>\\n  <div class=\\\"input-row\\\">\\n    <input #ipInput (input)='checkIP()' type=\\\"text\\\" class=\\\"input-frosted\\\">\\n    <i class=\\\"symbol {{validIp}}\\\" ></i>\\n  </div>\\n</form>\\n\\n\\n<!-- <div>Icons made by <a href=\\\"https://www.flaticon.com/authors/pixel-perfect\\\" title=\\\"Pixel perfect\\\">Pixel perfect</a> from <a href=\\\"https://www.flaticon.com/\\\" title=\\\"Flaticon\\\">www.flaticon.com</a></div> -->\\n\", styles: [\"form{display:flex;justify-content:center;flex-direction:column}form .no-margin{margin:0}form .input-row{display:flex;align-items:center}form .input-row .input-frosted{color:#fff;font-size:1.4rem;font-weight:800;padding:1rem;border:none;background:rgba(255,255,255,.4);backdrop-filter:blur(.2rem);-webkit-backdrop-filter:blur(.2rem);border-radius:.7rem;max-width:90%}form .input-row .symbol{width:2rem;height:2rem;margin-left:.5rem}form .input-row .symbol.connected{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22iso-8859-1%22%3F%3E%0D%3C!-- Generator%3A Adobe Illustrator 19.0.0%2C SVG Export Plug-In . SVG Version%3A 6.00 Build 0)  --%3E%0D%3Csvg version%3D%221.1%22 id%3D%22Layer_1%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 x%3D%220px%22 y%3D%220px%22%0D%09 viewBox%3D%220 0 511.999 511.999%22 style%3D%22enable-background%3Anew 0 0 511.999 511.999%3B%22 xml%3Aspace%3D%22preserve%22%3E%0D%3Cpath style%3D%22fill%3A%23B7E183%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L163.89%2C370.299L53.284%2C259.693%0D%09c-12.201-12.204-31.952-12.205-44.154-0.001c-12.173%2C12.174-12.173%2C31.981%2C0%2C44.153L141.814%2C436.53%0D%09c12.199%2C12.198%2C31.953%2C12.2%2C44.153%2C0L502.87%2C119.626C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cpath style%3D%22fill%3A%2371DE56%3B%22 d%3D%22M502.87%2C75.474c-12.201-12.204-31.952-12.205-44.154-0.001L243.511%2C290.678v88.306L502.87%2C119.626%0D%09C515.042%2C107.453%2C515.042%2C87.645%2C502.87%2C75.474z%22%2F%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3Cg%3E%0D%3C%2Fg%3E%0D%3C%2Fsvg%3E%0D\\\") no-repeat}form .input-row .symbol.disconnected{background:url(\\\"data:image/svg+xml,%3Csvg height%3D%22100%25%22 viewBox%3D%220 0 329.26933 329%22 width%3D%2220%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg fill%3D%22%23f44336%22%3E%3Cpath d%3D%22m21.339844 329.398438c-5.460938 0-10.925782-2.089844-15.082032-6.25-8.34375-8.339844-8.34375-21.824219 0-30.164063l286.589844-286.59375c8.339844-8.339844 21.824219-8.339844 30.164063 0 8.34375 8.339844 8.34375 21.824219 0 30.164063l-286.589844 286.59375c-4.183594 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3Cpath d%3D%22m307.929688 329.398438c-5.460938 0-10.921876-2.089844-15.082032-6.25l-286.589844-286.59375c-8.34375-8.339844-8.34375-21.824219 0-30.164063 8.339844-8.339844 21.820313-8.339844 30.164063 0l286.589844 286.59375c8.34375 8.339844 8.34375 21.824219 0 30.164063-4.160157 4.179687-9.621094 6.25-15.082031 6.25zm0 0%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\") center no-repeat}form .input-row .symbol.loading{background:url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22 standalone%3D%22no%22%3F%3E%3Csvg xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.0%22 width%3D%22100pt%22 height%3D%22100pt%22 viewBox%3D%220 0 128 128%22 xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23000%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23f8f8f8%22 transform%3D%22rotate(30 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23e8e8e8%22 transform%3D%22rotate(60 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23d4d4d4%22 transform%3D%22rotate(90 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23bebebe%22 transform%3D%22rotate(120 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23a6a6a6%22 transform%3D%22rotate(150 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%238e8e8e%22 transform%3D%22rotate(180 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23737373%22 transform%3D%22rotate(210 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%235a5a5a%22 transform%3D%22rotate(240 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23414141%22 transform%3D%22rotate(270 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%232a2a2a%22 transform%3D%22rotate(300 64 64)%22%2F%3E%3Cpath d%3D%22M64 1.5a62.8 62.8 0 0 0-12.4 1.23l-.38-1.45a64.56 64.56 0 0 1 25.57 0l-.4 1.45A62.78 62.78 0 0 0 64 1.5zm0 3a59.78 59.78 0 0 1 11.62 1.14L71.34 21.6a43.43 43.43 0 0 0-14.67.04l-4.3-16A59.78 59.78 0 0 1 64.02 4.5z%22 fill%3D%22%23151515%22 transform%3D%22rotate(330 64 64)%22%2F%3E%3CanimateTransform attributeName%3D%22transform%22 type%3D%22rotate%22 values%3D%220 64 64%3B30 64 64%3B60 64 64%3B90 64 64%3B120 64 64%3B150 64 64%3B180 64 64%3B210 64 64%3B240 64 64%3B270 64 64%3B300 64 64%3B330 64 64%22 calcMode%3D%22discrete%22 dur%3D%22240ms%22 repeatCount%3D%22indefinite%22%3E%3C%2FanimateTransform%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");background-size:contain}.switch{position:relative;display:inline-block;width:60px;height:34px}.switch input{opacity:0;width:0;height:0}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.slider:before{position:absolute;content:\\\"\\\";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input:checked+.slider{background-color:#2196f3}input:focus+.slider{box-shadow:0 0 1px #2196f3}input:checked+.slider:before{transform:translate(26px)}\\n\"] }]\n        }], function () { return [{ type: CleaningService }, { type: i3.HotToastService }]; }, { ipInput: [{\n                type: ViewChild,\n                args: ['ipInput', { static: true }]\n            }] });\n})();\n\nclass CleaningModule {\n}\nCleaningModule.ɵfac = function CleaningModule_Factory(t) { return new (t || CleaningModule)(); };\nCleaningModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CleaningModule });\nCleaningModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            NgxSpinnerModule\n        ]] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CleaningModule, [{\n            type: NgModule,\n            args: [{\n                    declarations: [CleaningButtonComponent, CleaningSetupComponent],\n                    imports: [\n                        CommonModule,\n                        NgxSpinnerModule\n                    ],\n                    exports: [CleaningButtonComponent, CleaningSetupComponent]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CleaningModule, { declarations: [CleaningButtonComponent, CleaningSetupComponent], imports: [CommonModule,\n            NgxSpinnerModule], exports: [CleaningButtonComponent, CleaningSetupComponent] });\n})();\n\n/*\n * Public API Surface of yah-cleaning\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CleaningButtonComponent, CleaningModule, CleaningService, CleaningSetupComponent };\n","map":{"version":3,"file":"yah-cleaning.mjs","sources":["../../../projects/yah-cleaning/src/lib/services/cleaning.service.ts","../../../projects/yah-cleaning/src/lib/components/cleaning-button/cleaning-button.component.html","../../../projects/yah-cleaning/src/lib/components/cleaning-button/cleaning-button.component.ts","../../../projects/yah-cleaning/src/lib/components/cleaning-setup/cleaning-setup.component.ts","../../../projects/yah-cleaning/src/lib/components/cleaning-setup/cleaning-setup.component.html","../../../projects/yah-cleaning/src/lib/cleaning.module.ts","../../../projects/yah-cleaning/src/projects.ts","../../../projects/yah-cleaning/src/yah-cleaning.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  combineLatest,\n  concat,\n  empty,\n  EMPTY,\n  iif,\n  NEVER,\n  Observable,\n  of,\n} from 'rxjs';\nimport { HttpClient, HttpEvent, HttpResponse } from '@angular/common/http';\nimport {\n  delay,\n  filter,\n  map,\n  repeat,\n  switchMap,\n  tap,\n  timeout,\n  timestamp,\n} from 'rxjs/operators';\nimport { CleaningStatus } from '../types/cleaning-status';\nimport { StorageMap } from '@ngx-pwa/local-storage';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CleaningService {\n  public isActivated$: Observable<boolean>;\n  public serverUrl$: Observable<string | undefined>;\n  public status$: Observable<CleaningStatus>;\n\n  private iRobotURL;\n\n  private readonly IROBOT_IS_ACTIVATED_KEY = 'IROBOT_IS_ACTIVATED';\n  private readonly IROBOT_SERVER_URL_KEY = 'IROBOT_SERVER_URL';\n\n  constructor(\n    private http: HttpClient,\n    private localDb: StorageMap,\n    private toastMessage: HotToastService,\n    private router: Router\n  ) {\n    this.isActivated$ = this.localDb.get(this.IROBOT_IS_ACTIVATED_KEY, {\n      type: 'boolean',\n    });\n\n    this.serverUrl$ = combineLatest([\n      localDb.watch(this.IROBOT_SERVER_URL_KEY, { type: 'string' }),\n      this.isActivated$,\n    ]).pipe(\n      map(([res, isActivated]) => {\n        if (!isActivated) {\n          return;\n        }\n\n        if (isActivated === undefined || res === undefined) {\n          this.toastMessage.warning('Lass uns uns sachen erstmal einstellen ', {\n            style: {\n              background: 'rgba(255, 255, 255, 0.8)',\n            },\n            dismissible: true,\n            ariaLive: 'polite',\n          });\n          this.router.navigate(['setup']).then();\n          return;\n        }\n        return res;\n      }),\n      tap((res) => (this.iRobotURL = res))\n    );\n\n    this.status$ = this.serverUrl$.pipe(\n      filter((serverUrl) => !!serverUrl),\n      switchMap((serverUrl) => {\n        return this.http\n          .get<CleaningStatus>(`http://${serverUrl}/api/local/info/mission`)\n      })\n    );\n  }\n\n  public checkiRobotServer(ip: string): Observable<HttpResponse<any>> {\n    let formattedIp = ip.replace('http://', '');\n    formattedIp = formattedIp.replace('/api/local/info/mission', '');\n    formattedIp = formattedIp.replace('/', '');\n    return this.http\n      .get<HttpResponse<any>>(`http://${formattedIp}/api/local/info/mission`, {\n        observe: 'response',\n      })\n      .pipe(timeout(3000));\n  }\n\n  public startRobot(): Observable<boolean> {\n    return this.http\n      .get(`http://${this.iRobotURL}/api/local/action/start`, { observe: 'response' })\n      .pipe(map((response) => !!response.status));\n  }\n\n  public stopRobot(): Observable<boolean> {\n    return this.http\n      .get(`http://${this.iRobotURL}/api/local/action/stop`, { observe: 'response' })\n      .pipe(map((response) => !!response.status));\n  }\n\n  public saveiRobotIp(input: string): Observable<null> {\n    return this.localDb.set(this.IROBOT_SERVER_URL_KEY, input, {\n      type: 'string',\n    });\n  }\n\n  public saveActivated(isActivated: boolean): Observable<null> {\n    return this.localDb.set(this.IROBOT_IS_ACTIVATED_KEY, isActivated, {\n      type: 'boolean',\n    });\n  }\n}\n","<div class=\"box\">\n  <div class=\"header\"><img src=\"./assets/cleaner.svg\" /> iRobot </div>\n\n  <ngx-spinner\n    name=\"cleaning-connection-spinner\"\n    bdColor=\"rgba(0,0,0,0)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"square-loader\"\n    [fullScreen]=\"false\"\n    ></ngx-spinner\n  >\n\n  <div class=\"robot-status\" *ngIf=\"robotAvailable\">\n    {{ robotStatus }}\n    <div class=\"battery\">\n      <span class=\"gg-battery\"></span>\n      <span> {{ robotBattery }} %</span>\n    </div>\n    <div class=\"cleaning-button\" (click)=\"startRobot()\">Start</div>\n    <div class=\"stop-cleaning-button\" (click)=\"stopRobot()\">Stop</div>\n  </div>\n</div>\n\n<!-- <div>Icons made by <a href=\"https://www.flaticon.com/authors/creaticca-creative-agency\" title=\"Creaticca Creative Agency\">Creaticca Creative Agency</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { CleaningService } from '../../services/cleaning.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'yah-cleaning-button',\n  templateUrl: './cleaning-button.component.html',\n  styleUrls: ['./cleaning-button.component.scss'],\n})\nexport class CleaningButtonComponent implements OnInit {\n  robotAvailable = false;\n  robotBattery = 0;\n  private SPINNER_NAME = 'cleaning-connection-spinner';\n  robotStatus = '';\n\n  constructor(\n    private cleaningService: CleaningService,\n    private ngxSpinnerService: NgxSpinnerService\n  ) {\n    this.ngxSpinnerService.show(this.SPINNER_NAME);\n    this.cleaningService.status$.subscribe((status) => {\n      this.ngxSpinnerService.hide(this.SPINNER_NAME);\n      this.robotStatus = 'Robot verfügbar';\n      this.robotAvailable = !!status.cleanMissionStatus.phase;\n      this.robotBattery = status.batPct;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  startRobot(): void {\n    this.cleaningService\n      .startRobot()\n      .pipe(take(1))\n      .subscribe((succesful) => {\n        if (succesful === true) {\n          this.robotStatus = 'Unterwegs Putzen';\n        }\n      });\n  }\n\n  stopRobot(): void {\n    this.cleaningService.stopRobot().pipe(take(1)).subscribe((succesful) => {\n      if (succesful === true) {\n        this.robotStatus = 'Robot verfügbar';\n      }\n    });\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { debounceTime, distinctUntilChanged, take } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { CleaningService } from '../../services/cleaning.service';\nimport { HotToastService } from '@ngneat/hot-toast';\n\n@Component({\n  selector: 'yah-cleaning-setup',\n  templateUrl: './cleaning-setup.component.html',\n  styleUrls: ['./cleaning-setup.component.scss'],\n})\nexport class CleaningSetupComponent implements OnInit {\n  @ViewChild('ipInput', { static: true }) ipInput: ElementRef<HTMLInputElement>;\n\n  isActivated = false;\n  validIp = 'disconnected';\n  checkingSubscription: Subscription;\n\n  constructor(\n    private cleaningService: CleaningService,\n    private toastMessage: HotToastService\n  ) {\n    this.cleaningService.isActivated$.subscribe((res) => {\n      this.isActivated = res;\n    });\n\n    this.cleaningService.serverUrl$.subscribe((res) => {\n      this.ipInput.nativeElement.value = res ? res : '';\n      this.validIp = res ? 'connected' : 'disconnected';\n    });\n  }\n\n  ngOnInit(): void {}\n\n  setChecked($event: Event): void {\n    const input = $event.target as HTMLInputElement;\n    this.cleaningService.saveActivated(input.checked).subscribe(() => {\n      this.toastMessage.success(\n        'iRobot Server Einstellungen sind gespeichert',\n        {\n          style: {\n            background: 'rgba(255, 255, 255, 0.8)',\n          },\n          dismissible: true,\n          ariaLive: 'polite',\n          id: 'hue-saved',\n        }\n      );\n    });\n  }\n\n  checkIP(): void {\n    const input = this.ipInput.nativeElement.value;\n\n    if (input.length > 1) {\n      this.validIp = 'loading';\n\n      // Have we already fired it? Then let it run out..\n      if (this.checkingSubscription) {\n        this.checkingSubscription.unsubscribe();\n      }\n      this.checkingSubscription = this.cleaningService\n        .checkiRobotServer(input)\n        .pipe(debounceTime(750), distinctUntilChanged(), take(1))\n        .subscribe(\n          (res) => {\n            res.status === 200\n              ? this.setiRobotValidIp(input)\n              : this.showErrorMessage();\n          },\n          (err) => this.showErrorMessage()\n        );\n    }\n  }\n\n  showErrorMessage(): void {\n    this.validIp = 'disconnected';\n  }\n\n  setiRobotValidIp(input: string): void {\n    this.checkingSubscription.unsubscribe();\n    this.validIp = 'connected';\n    this.cleaningService.saveiRobotIp(input).subscribe(() => {\n      this.ipInput.nativeElement.value = input;\n      this.toastMessage.success(\n        'iRobot Server Einstellungen sind gespeichert',\n        {\n          style: {\n            background: 'rgba(255, 255, 255, 0.8)',\n          },\n          dismissible: true,\n          ariaLive: 'polite',\n          id: 'hue-saved',\n        }\n      );\n    });\n  }\n}\n","<form>\n\n  <h2> <img src=\"assets/cleaner.svg\" width=\"32\"> iRobot Server Einstellungen </h2>\n  <p class=\"no-margin\"> Aktiviert </p>\n  <label class=\"switch\">\n    <input type=\"checkbox\" (change)=\"setChecked($event)\" [checked]=\"isActivated\">\n    <span class=\"slider\"></span>\n  </label>\n\n\n  <p></p>\n\n  <p class=\"no-margin\"> IP </p>\n  <div class=\"input-row\">\n    <input #ipInput (input)='checkIP()' type=\"text\" class=\"input-frosted\">\n    <i class=\"symbol {{validIp}}\" ></i>\n  </div>\n</form>\n\n\n<!-- <div>Icons made by <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> -->\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CleaningButtonComponent} from './components/cleaning-button/cleaning-button.component';\nimport {CleaningSetupComponent} from './components/cleaning-setup/cleaning-setup.component';\nimport {NgxSpinnerModule} from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [CleaningButtonComponent, CleaningSetupComponent],\n  imports: [\n    CommonModule,\n    NgxSpinnerModule\n  ],\n  exports: [CleaningButtonComponent, CleaningSetupComponent]\n})\nexport class CleaningModule { }\n","/*\n * Public API Surface of yah-cleaning\n */\n\nexport * from './lib/cleaning.module';\nexport * from './lib/components/cleaning-button/cleaning-button.component';\nexport * from './lib/components/cleaning-setup/cleaning-setup.component';\nexport * from './lib/types/cleaning-status';\nexport * from './lib/services/cleaning.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './projects';\n"],"names":[],"mappings":"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"}}}